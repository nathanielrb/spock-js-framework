/* CODE GENERATED BY SPOCK 0 */
var t772 = function (k434) {
 var t773 = function (k435, t1, t2) {	// qsa
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t774 = t1.querySelectorAll(t2);
   return k435(t774);
  }
 };
 ___qsa = t773;	// set! qsa
 var t776 = function (k436, t3, t4) {	// qs
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t777 = t3.querySelector(t4);
   return k436(t777);
  }
 };
 ___qs = t776;	// set! qs
 var t779 = function (k437, t5, t6) {	// dqsa
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t780 = document.body.querySelectorAll(t6);
   return k437(t780);
  }
 };
 ___dqsa = t779;	// set! dqsa
 var t782 = function (k438, t7, t8) {	// dqs
  var r = SPOCK.count(arguments);
  if(r) return r;
  return ___qs(k438, document.body, t8);
 };
 ___dqs = t782;	// set! dqs
 var t784 = function (k439, t9) {	// log
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t785 = console.log(t9);
   return k439(t785);
  }
 };
 ___log = t784;	// set! log
 var t787 = function (k440, t10) {	// alert
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t788 = window.alert(t10);
   return k440(t788);
  }
 };
 ___alert = t787;	// set! alert
 var t790 = function (k441, t11) {	// get-id
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t791 = document.getElementById(t11);
   return k441(t791);
  }
 };
 ___get_2did = t790;	// set! get-id
 var t793 = function (k442, t12) {	// remove-node
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t794 = function(k795, x) { return k795(x.parentNode); }
  var t796 = function (t443) {
   var t797 = t443.removeChild(t12);
   return k442(t797);
  };
  return t794(t796, t12);
 };
 ___remove_2dnode = t793;	// set! remove-node
 var t800 = function (k444, t13, t14) {	// insert-node-before
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t801 = function(k802, x) { return k802(x.parentNode); }
  var t803 = function (t445) {
   var t804 = t445.insertBefore(t13, t14);
   return k444(t804);
  };
  return t801(t803, t14);
 };
 ___insert_2dnode_2dbefore = t800;	// set! insert-node-before
 var t807 = function (k446, t15, t16) {	// replace-node
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t808 = function(k809, x) { return k809(x.parentNode); }
  var t810 = function (t447) {
   var t811 = t447.replaceChild(t15, t16);
   return k446(t811);
  };
  return t808(t810, t16);
 };
 ___replace_2dnode = t807;	// set! replace-node
 var t814 = function (k448, t17, t18) {	// node-append-child
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t815 = t17.appendChild(t18);
   return k448(t815);
  }
 };
 ___node_2dappend_2dchild = t814;	// set! node-append-child
 var t817 = function (k449, t19, t20) {	// set-html
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   t19.innerHTML = t20;
   return k449(t20);
  }
 };
 ___set_2dhtml = t817;	// set! set-html
 var t819 = function (k450) {	// spock-elements
  loop: while(true) {
   var t821 = document.body.querySelectorAll("*[spock]");
   var t820 = Array.prototype.slice.call(t821);
   return k450(t820);
  }
 };
 ___spock_2delements = t819;	// set! spock-elements
 var t823 = function (k451, t21, t22, t23) {	// add-event-listener
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t824 = t22.addEventListener(t21, t23);
   return k451(t824);
  }
 };
 ___add_2devent_2dlistener = t823;	// set! add-event-listener
 var t826 = function (k452, t24, t25, t26) {	// set-event
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   t25.event = t26;
   return k452(t25);
  }
 };
 ___set_2devent = t826;	// set! set-event
 var t828 = function (k453, t27, t28) {	// set-click
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   t27.onclick = t28;
   return k453(t27);
  }
 };
 ___set_2dclick = t828;	// set! set-click
 var t830 = function (k454, t29, t30) {	// set-change
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   t29.onchange = t30;
   return k454(t29);
  }
 };
 ___set_2dchange = t830;	// set! set-change
 var t832 = function (k455, t31, t32) {	// set-input
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   t31.oninput = t32;
   return k455(t31);
  }
 };
 ___set_2dinput = t832;	// set! set-input
 var t834 = function (k456, t33, t34) {	// old-set-click
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   t33.onclick = t34;
   return k456(t33);
  }
 };
 ___old_2dset_2dclick = t834;	// set! old-set-click
 var t836 = function (k457, t35) {	// slice
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t837 = Array.prototype.slice.call(t35);
   return k457(t837);
  }
 };
 ___slice = t836;	// set! slice
 var t839 = function (k458, t36) {	// children
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t840 = t36.childNodes;
  return ___slice(k458, t840);
 };
 ___children = t839;	// set! children
 var t842 = function (k459, t37) {	// car-safe
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t38 = t37;
   var t844 = (t38) instanceof SPOCK.Pair ;
   var t843;
   if(t844 !== false) {
    var t39 = t37;
    var t40 = t39;
    var t845 = t40.car;
    t843 = t845;
   }
   else {
    t843 = false;
   }
   return k459(t843);
  }
 };
 ___car_2dsafe = t842;	// set! car-safe
 var t847 = function (k460, t41) {	// cdr-safe
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t42 = t41;
   var t849 = (t42) instanceof SPOCK.Pair ;
   var t848;
   if(t849 !== false) {
    var t43 = t41;
    var t44 = t43;
    var t850 = t44.cdr;
    t848 = t850;
   }
   else {
    t848 = false;
   }
   return k460(t848);
  }
 };
 ___cdr_2dsafe = t847;	// set! cdr-safe
 var t852 = function (k461, t45) {	// empty?
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t47 = t45;
   var t854 = t47 === undefined;
   var t853;
   if(t854 !== false) {
    var t48 = t45;
    var t49 = t48;
    var t856 = null;
    var t50 = t856;
    var t857 = (t49) === (t50);
    var t855;
    if(t857 !== false) {
     var t51 = t45;
     var t858;
     if(t51 !== false) {
      t858 = false;
     }
     else {
      t858 = true;
     }
     t855 = t858;
    }
    else {
     t855 = false;
    }
    t853 = t855;
   }
   else {
    t853 = false;
   }
   var t46 = t853;
   var t859;
   if(t46 !== false) {
    t859 = false;
   }
   else {
    t859 = true;
   }
   return k461(t859);
  }
 };
 ___empty_3f = t852;	// set! empty?
 var t861 = function (k462, t52) {	// nodename
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t862 = t52.nodeName;
   return k462(t862);
  }
 };
 ___nodename = t861;	// set! nodename
 var t864 = function (k463, t53, t54, t55) {	// h
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t865 = function (t464) {	// t465
   var t56 = t464;
   var t866 = snabbdom.h(t53, t54, t56);
   return k463(t866);
  };
  var t465 = t865;
  var t868 = function (t466) {
   var t869;
   if(t466 !== false) {
    return ___list_2d_3evector(t465, t55);
   }
   else {
    var t58 = t55;
    var t872 = (t58) instanceof Array ;
    var t57 = t872;
    var t873;
    if(t57 !== false) {
     t873 = t57;
    }
    else {
     var t59 = t55;
     var t874 = typeof(t59);
     var t61 = t874;
     var t62 = "string";
     var t875 = (t61) === (t62);
     var t60 = t875;
     var t876;
     if(t60 !== false) {
      t876 = t60;
     }
     else {
      var t877 = (t59) instanceof SPOCK.String ;
      t876 = t877;
     }
     t873 = t876;
    }
    var t871;
    if(t873 !== false) {
     t871 = t55;
    }
    else {
     t871 = false;
    }
    return t465(t871);
   }
  };
  return ___list_3f(t868, t55);
 };
 ___h = t864;	// set! h
 var t880 = function (k467, t63, t64) {	// patch
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t881 = patch(t63, t64);
   return k467(t881);
  }
 };
 ___patch = t880;	// set! patch
 var t883 = function (k468, t65, t66, t67) {	// a-click
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t884 = function (t470) {
   var t885 = function (t471) {
    var t886 = function (t469) {
     return ___h(k468, "a", t469, t66);
    };
    return ____25(t886, "props", t470, "on", t471);
   };
   return ____25(t885, "click", t67);
  };
  return ____25(t884, "href", "#", "class", t65);
 };
 ___a_2dclick = t883;	// set! a-click
 var t891 = function (k472, t68) {	// ajax-cb
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t892 = function(k893, x) { return k893(x.responseText); }
  var t894 = function (t473) {
   return ___log(k472, t473);
  };
  return t892(t894, t68);
 };
 ___ajax_2dcb = t891;	// set! ajax-cb
 var t897 = function (k474, t69, t70, t71) {	// ajax
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t898 = new XMLHttpRequest();
  var t72 = t898;
  var t899 = t72.open(t69, t70, true);
  var t900 = function (k475, t74) {	// t73
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t901 = function(k902, x) { return k902(x.status); }
   var t903 = function (t478) {
    var t75 = t478;
    var t76 = 200;
    var t904 = SPOCK.equalp(t75, t76);
    var t476 = t904;
    var t905;
    if(t476 !== false) {
     return t71(k475, t74);
    }
    else {
     var t907 = function (t477) {
      return ___log(k475, ___event);
     };
     return ___log(t907, "Ajax error");
    }
   };
   return t901(t903, t72);
  };
  var t73 = t900;
  var t911 = SPOCK.callback(t73);
  t72.onload = t911;
  t72.responseType = "json";
  var t912 = t72.send();
  return k474(t912);
 };
 ___ajax = t897;	// set! ajax
 var t914 = function (k479, t77) {	// get-callback
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t915 = function (t480) {	// t481
   var t78 = t480;
   var t916 = SPOCK.intern("callback");
   return ___get(k479, t78, t916);
  };
  var t481 = t915;
  var t79 = t77;
  var t919 = typeof(t79);
  var t81 = t919;
  var t82 = "string";
  var t920 = (t81) === (t82);
  var t80 = t920;
  var t921;
  if(t80 !== false) {
   t921 = t80;
  }
  else {
   var t922 = (t79) instanceof SPOCK.String ;
   t921 = t922;
  }
  var t918;
  if(t921 !== false) {
   return ___string_2d_3esymbol(t481, t77);
  }
  else {
   return t481(t77);
  }
 };
 ___get_2dcallback = t914;	// set! get-callback
 var t925 = function (k482) {	// waiting
  loop: while(true) {
   return k482(false);
  }
 };
 ___waiting = t925;	// set! waiting
 ___call_2fcc = ___call_2dwith_2dcurrent_2dcontinuation;	// set! call/cc
 var t927 = null;
 ____2aqueue_2a = t927;	// set! *queue*
 var t928 = function (k483, t83) {	// *enqueue*
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t929 = function (t486) {
   var t84 = t486;
   var t485 = t84;
   var t930 = function (t484) {
    ____2aqueue_2a = t484;	// set! *queue*
    return k483(undefined);
   };
   return ___append(t930, ____2aqueue_2a, t485);
  };
  return ____25list(t929, t83);
 };
 ____2aenqueue_2a = t928;	// set! *enqueue*
 var t934 = function (k487) {	// *dequeue*
  loop: while(true) {
   var t86 = ____2aqueue_2a;
   var t87 = t86;
   var t935 = t87.car;
   var t85 = t935;
   var t88 = ____2aqueue_2a;
   var t89 = t88;
   var t936 = t89.cdr;
   ____2aqueue_2a = t936;	// set! *queue*
   return k487(t85);
  }
 };
 ____2adequeue_2a = t934;	// set! *dequeue*
 var t938 = function (k488) {	// yield
  var t90 = ____2aqueue_2a;
  var t91 = t90;
  var t940 = null;
  var t92 = t940;
  var t941 = (t91) === (t92);
  var t939;
  if(t941 !== false) {
   return ___waiting(k488);
  }
  else {
   var t943 = function (t489) {
    var t93 = t489;
    var t944 = function (t490) {
     var t945 = function (t491) {
      return t491(k488);
     };
     return t93(t945);
    };
    return ___print(t944, "YIELDING");
   };
   return ____2adequeue_2a(t943);
  }
 };
 ___yield = t938;	// set! yield
 var t950 = function (k492, t94, t95) {	// assoc-val
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t951 = function (t493) {
   return ___cdr_2dsafe(k492, t493);
  };
  return ___assoc(t951, t94, t95);
 };
 ___assoc_2dval = t950;	// set! assoc-val
 ___merge_2dbindings = ___append;	// set! merge-bindings
 var t954 = function (k494, t96, t97, t98) {	// put-cons!
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t99 = t98;
  var t955 = function (t497) {
   var t101 = t497;
   var t956;
   if(t101 !== false) {
    t956 = t101;
   }
   else {
    var t957 = null;
    t956 = t957;
   }
   var t496 = t956;
   var t100 = t496;
   var t958 = new SPOCK.Pair(t99, t100);
   var t495 = t958;
   return ___put_21(k494, t96, t97, t495);
  };
  return ___get(t955, t96, t97);
 };
 ___put_2dcons_21 = t954;	// set! put-cons!
 var t961 = function (k498, t102, t103) {	// get-binding
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t962 = function (t499) {
   var t104 = t499;
   var t963;
   if(t104 !== false) {
    var t105 = t104;
    var t106 = t105;
    var t964 = t106.cdr;
    t963 = t964;
   }
   else {
    t963 = false;
   }
   return k498(t963);
  };
  return ___assoc(t962, t102, t103);
 };
 ___get_2dbinding = t961;	// set! get-binding
 var t967 = function (k500, t107, t108) {	// send-bindings
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t968 = function (t501) {
   return t501(k500, t108);
  };
  var t970 = SPOCK.intern("continuations");
  return ___get(t968, t107, t970);
 };
 ___send_2dbindings = t967;	// set! send-bindings
 var t972 = function (k502, t109, t110) {	// three-way-split
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t111 = undefined;
  var t973 = function (k503, t112, t113, t114, t115, t116) {	// t111
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t117 = t113;
   var t118 = t117;
   var t975 = null;
   var t119 = t975;
   var t976 = (t118) === (t119);
   var t974;
   if(t976 !== false) {
    var t977 = function (t505) {
     var t978 = function (t504) {
      var t120 = t504;
      return k503(t120);
     };
     return ____25list(t978, t505, t115, t116);
    };
    return ___append(t977, t112, t114);
   }
   else {
    var t122 = t113;
    var t123 = t122;
    var t982 = t123.car;
    var t121 = t982;
    var t124 = undefined;
    var t983 = function (k506, t125, t126) {	// t124
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t127 = t125;
     var t128 = t127;
     var t985 = null;
     var t129 = t985;
     var t986 = (t128) === (t129);
     var t984;
     if(t986 !== false) {
      var t130 = t113;
      var t131 = t130;
      var t987 = t131.cdr;
      var t132 = t121;
      var t133 = t116;
      var t988 = new SPOCK.Pair(t132, t133);
      return t111(k506, t126, t987, t114, t115, t988);
     }
     else {
      var t135 = t125;
      var t136 = t135;
      var t990 = t136.car;
      var t134 = t990;
      var t137 = t121;
      var t138 = t134;
      var t992 = SPOCK.equalp(t137, t138);
      var t991;
      if(t992 !== false) {
       var t993 = function (t507) {
        var t141 = t113;
        var t142 = t141;
        var t994 = t142.cdr;
        var t143 = t121;
        var t144 = t115;
        var t995 = new SPOCK.Pair(t143, t144);
        return t111(k506, t507, t994, t114, t995, t116);
       };
       var t139 = t125;
       var t140 = t139;
       var t997 = t140.cdr;
       return ___append(t993, t126, t997);
      }
      else {
       var t145 = t125;
       var t146 = t145;
       var t999 = t146.cdr;
       var t147 = t134;
       var t148 = t126;
       var t1000 = new SPOCK.Pair(t147, t148);
       return t124(k506, t999, t1000);
      }
      t984 = t991;
     }
    };
    t124 = t983;	// set! t124
    var t1002 = null;
    return t124(k503, t112, t1002);
   }
  };
  t111 = t973;	// set! t111
  var t1004 = null;
  var t1005 = null;
  var t1006 = null;
  return t111(k502, t109, t110, t1004, t1005, t1006);
 };
 ___three_2dway_2dsplit = t972;	// set! three-way-split
 var t1008 = function (k508, t149, t150) {	// merge-alist-sets
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t152 = t150;
  var t153 = t152;
  var t1009 = t153.car;
  var t151 = t1009;
  var t154 = undefined;
  var t1010 = function (k509, t155, t156, t157) {	// t154
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t159 = t156;
   var t160 = t159;
   var t1012 = null;
   var t161 = t1012;
   var t1013 = (t160) === (t161);
   var t158 = t1013;
   var t1014;
   if(t158 !== false) {
    t1014 = t158;
   }
   else {
    var t162 = t155;
    var t163 = t162;
    var t1015 = null;
    var t164 = t1015;
    var t1016 = (t163) === (t164);
    t1014 = t1016;
   }
   var t1011;
   if(t1014 !== false) {
    var t1017 = function (t512) {
     var t169 = t512;
     var t511 = t169;
     var t167 = t511;
     var t168 = t156;
     var t1018 = new SPOCK.Pair(t167, t168);
     var t510 = t1018;
     var t165 = t510;
     var t166 = t157;
     var t1019 = new SPOCK.Pair(t165, t166);
     return k509(t1019);
    };
    return ____25list(t1017, t151);
   }
   else {
    var t171 = t155;
    var t173 = t171;
    var t174 = t173;
    var t1022 = t174.car;
    var t172 = t1022;
    var t175 = t172;
    var t1023 = t175.car;
    var t170 = t1023;
    var t177 = t155;
    var t179 = t177;
    var t180 = t179;
    var t1024 = t180.car;
    var t178 = t1024;
    var t181 = t178;
    var t1025 = t181.cdr;
    var t176 = t1025;
    var t1026 = function (t513) {
     var t182 = t513;
     var t184 = t182;
     var t185 = t184;
     var t1027 = t185.car;
     var t183 = t1027;
     var t187 = t182;
     var t189 = t187;
     var t190 = t189;
     var t1028 = t190.cdr;
     var t188 = t1028;
     var t191 = t188;
     var t1029 = t191.car;
     var t186 = t1029;
     var t1030 = function (t514) {
      var t192 = t514;
      var t1031 = function (t517) {
       var t195 = t517;
       var t516 = t195;
       var t1032 = function (t515) {
        var t193 = t155;
        var t194 = t193;
        var t1033 = t194.cdr;
        return t154(k509, t1033, t192, t515);
       };
       return ___append(t1032, t516, t157);
      };
      var t196 = t170;
      var t197 = t183;
      var t1036 = new SPOCK.Pair(t196, t197);
      var t200 = t151;
      var t201 = t170;
      var t1037 = new SPOCK.Pair(t200, t201);
      var t198 = t1037;
      var t199 = t186;
      var t1038 = new SPOCK.Pair(t198, t199);
      return ____25list(t1031, t1036, t1038);
     };
     return ___caddr(t1030, t182);
    };
    return ___three_2dway_2dsplit(t1026, t176, t156);
   }
  };
  t154 = t1010;	// set! t154
  var t202 = t150;
  var t203 = t202;
  var t1042 = t203.cdr;
  var t1043 = null;
  return t154(k508, t149, t1042, t1043);
 };
 ___merge_2dalist_2dsets = t1008;	// set! merge-alist-sets
 var t1045 = function (k518, t204) {	// merge-continuation-lists
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t205 = undefined;
  var t1046 = function (k519, t206, t207) {	// t205
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t208 = t207;
   var t209 = t208;
   var t1048 = null;
   var t210 = t1048;
   var t1049 = (t209) === (t210);
   var t1047;
   if(t1049 !== false) {
    return k519(t206);
   }
   else {
    var t1051 = function (t520) {
     var t213 = t207;
     var t214 = t213;
     var t1052 = t214.cdr;
     return t205(k519, t520, t1052);
    };
    var t211 = t207;
    var t212 = t211;
    var t1054 = t212.car;
    return ___merge_2dalist_2dsets(t1051, t206, t1054);
   }
  };
  t205 = t1046;	// set! t205
  var t1056 = null;
  return t205(k518, t1056, t204);
 };
 ___merge_2dcontinuation_2dlists = t1045;	// set! merge-continuation-lists
 var t1058 = function (k521, t215) {	// send-vars
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1059 = function (t528) {
   var t1060 = function (t527) {
    var t1061 = function (t522) {
     return ___yield(k521);
    };
    var t1063 = function (k523, t216) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1064 = function (t524) {
      var t219 = t216;
      var t220 = t219;
      var t1065 = t220.car;
      var t217 = t1065;
      var t221 = t216;
      var t222 = t221;
      var t1066 = t222.cdr;
      var t218 = t1066;
      var t224 = t218;
      var t225 = t224;
      var t1068 = null;
      var t226 = t1068;
      var t1069 = (t225) === (t226);
      var t223 = t1069;
      var t1070;
      if(t223 !== false) {
       t1070 = false;
      }
      else {
       t1070 = true;
      }
      var t1067;
      if(t1070 !== false) {
       var t1071 = function (k525, t227) {
        var r = SPOCK.count(arguments);
        if(r) return r;
        var t1072 = function (k526) {
         return t227(k526, t215);
        };
        return ____2aenqueue_2a(k525, t1072);
       };
       return ___map(k523, t1071, t218);
      }
      else {
       return k523(undefined);
      }
     };
     return ___print(t1064, "CONTINUATIONS: ", t216);
    };
    return ___map(t1061, t1063, t527);
   };
   return ___merge_2dcontinuation_2dlists(t1060, t528);
  };
  var t1080 = function (k529, t228) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t230 = t228;
   var t231 = t230;
   var t1081 = t231.car;
   var t229 = t1081;
   var t232 = t229;
   var t1082 = function (t530) {
    var t233 = t530;
    var t1083 = new SPOCK.Pair(t232, t233);
    return k529(t1083);
   };
   var t1085 = SPOCK.intern("continuations");
   return ___get(t1082, t229, t1085);
  };
  return ___map(t1059, t1080, t215);
 };
 ___send_2dvars = t1058;	// set! send-vars
 var t1088 = function (k531, t234, t235) {	// register-component
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1089 = function (t532) {	// t533
   var t236 = t532;
   var t1090 = SPOCK.intern("callback");
   return ___put_21(k531, t236, t1090, t235);
  };
  var t533 = t1089;
  var t237 = t234;
  var t1093 = typeof(t237);
  var t239 = t1093;
  var t240 = "string";
  var t1094 = (t239) === (t240);
  var t238 = t1094;
  var t1095;
  if(t238 !== false) {
   t1095 = t238;
  }
  else {
   var t1096 = (t237) instanceof SPOCK.String ;
   t1095 = t1096;
  }
  var t1092;
  if(t1095 !== false) {
   return ___string_2d_3esymbol(t533, t234);
  }
  else {
   return t533(t234);
  }
 };
 ___register_2dcomponent = t1088;	// set! register-component
 var t1099 = function (k534) {	// start
  var t1100 = function (t535) {
   return ___print(k534, "waiting...");
  };
  var t1102 = function (k536, t241) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   loop: while(true) {
    ___waiting = t241;	// set! waiting
    return k536(undefined);
   }
  };
  return ___call_2fcc(t1100, t1102);
 };
 ___start = t1099;	// set! start
 var t1105 = function (k537, t242, t243) {	// github-api-call
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1106 = function (t538) {
   var t1107 = function (k539, t244) {
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1108 = function(k1109, x) { return k1109(x.currentTarget); }
    var t1110 = function (t544) {
     var t1111 = function(k1112, x) { return k1112(x.response); }
     var t1113 = function (t543) {
      var t1114 = function (t540) {
       var t1115 = function(k1116, x) { return k1116(x.currentTarget); }
       var t1117 = function (t542) {
        var t1118 = function(k1119, x) { return k1119(x.response); }
        var t1120 = function (t541) {
         return t243(k539, t541);
        };
        return t1118(t1120, t542);
       };
       return t1115(t1117, t244);
      };
      return ___log(t1114, t543);
     };
     return t1111(t1113, t544);
    };
    return t1108(t1110, t244);
   };
   return ___ajax(k537, "GET", t538, t1107);
  };
  return ___jstring(t1106, t242);
 };
 ___github_2dapi_2dcall = t1105;	// set! github-api-call
 var t1129 = function (k545, t245, t246) {	// github-api-repos
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1130 = function (t546) {
   return ___github_2dapi_2dcall(k545, t546, t246);
  };
  return ___string_2dappend(t1130, "https://api.github.com/users/", t245, "/repos");
 };
 ___github_2dapi_2drepos = t1129;	// set! github-api-repos
 var t1133 = function (k547, t247, t248, t249) {	// github-api-repo
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1134 = function (t548) {
   return ___github_2dapi_2dcall(k547, t548, t249);
  };
  return ___string_2dappend(t1134, "https://api.github.com/repos/", t247, "/", t248, "/contents");
 };
 ___github_2dapi_2drepo = t1133;	// set! github-api-repo
 var t1137 = function (k549, t250, t251) {	// make-filetree
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t252 = t250;
   var t253 = t251;
   var t1138 = new SPOCK.Pair(t252, t253);
   return k549(t1138);
  }
 };
 ___make_2dfiletree = t1137;	// set! make-filetree
 var t1140 = function (k550, t254) {	// make-empty-filetree
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1141 = null;
  return ___make_2dfiletree(k550, t254, t1141);
 };
 ___make_2dempty_2dfiletree = t1140;	// set! make-empty-filetree
 var t1143 = function (k551, t255) {	// make-filetree-children
  var r = SPOCK.count(arguments);
  if(r) return r;
  return ___map(k551, ___make_2dempty_2dfiletree, t255);
 };
 ___make_2dfiletree_2dchildren = t1143;	// set! make-filetree-children
 var t1145 = function (k552, t256) {	// filetree-file
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t257 = t256;
   var t258 = t257;
   var t1146 = t258.car;
   return k552(t1146);
  }
 };
 ___filetree_2dfile = t1145;	// set! filetree-file
 var t1148 = function (k553, t259) {	// filetree-children
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t260 = t259;
   var t261 = t260;
   var t1149 = t261.cdr;
   return k553(t1149);
  }
 };
 ___filetree_2dchildren = t1148;	// set! filetree-children
 var t1151 = function (k554, t262) {	// filetree-path
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1152 = function (t555) {
   var t1153 = function(k1154, x) { return k1154(x.path); }
   return t1153(k554, t555);
  };
  return ___filetree_2dfile(t1152, t262);
 };
 ___filetree_2dpath = t1151;	// set! filetree-path
 var t1157 = function (k556, t263) {	// filetree-type
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1158 = function (t557) {
   var t1159 = function(k1160, x) { return k1160(x.type); }
   return t1159(k556, t557);
  };
  return ___filetree_2dfile(t1158, t263);
 };
 ___filetree_2dtype = t1157;	// set! filetree-type
 var t1163 = function (k558, t264) {	// filetree-name
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1164 = function (t559) {
   var t1165 = function(k1166, x) { return k1166(x.name); }
   return t1165(k558, t559);
  };
  return ___filetree_2dfile(t1164, t264);
 };
 ___filetree_2dname = t1163;	// set! filetree-name
 var t1169 = function (k560, t265, t266) {	// substring=?
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t267 = t265;
   var t269 = t266;
   var t270 = 0;
   var t272 = t265;
   var t273 = t272;
   var t1171 = SPOCK.jstring(t273);
   var t1170 = t1171.length;
   var t271 = t1170;
   var t275 = t269;
   var t1172 = SPOCK.jstring(t275);
   var t274 = t1172;
   var t276 = t271;
   var t1175 = t276 === undefined;
   var t1174;
   if(t1175 !== false) {
    var t1176 = t274.length;
    t1174 = t1176;
   }
   else {
    t1174 = t271;
   }
   var t1173 = t274.substring(t270, t1174);
   var t268 = t1173;
   var t1177 = SPOCK.equalp(t267, t268);
   return k560(t1177);
  }
 };
 ___substring_3d_3f = t1169;	// set! substring=?
 var t1179 = function (k561, t277, t278) {	// filetree-replace-children
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1180 = function (t562) {
   return ___make_2dfiletree(k561, t562, t278);
  };
  return ___filetree_2dfile(t1180, t277);
 };
 ___filetree_2dreplace_2dchildren = t1179;	// set! filetree-replace-children
 var t1183 = function (k563, t279, t280, t281) {	// filetree-insert-children
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1184 = function (t581) {
   var t1185 = function (t564) {
    var t1186 = function (t580) {
     var t1187 = function (t565) {
      return ___filetree_2dreplace_2dchildren(k563, t279, t565);
     };
     var t1189 = function (k566, t282) {
      var r = SPOCK.count(arguments);
      if(r) return r;
      var t1190 = function (t579) {
       var t1191 = function (t567) {
        var t283 = t281;
        var t1192 = function (t578) {
         var t284 = t578;
         var t1193 = SPOCK.equalp(t283, t284);
         var t577 = t1193;
         var t1194 = function (t568) {
          var t1195 = function (t576) {
           var t1196 = function (t575) {
            var t1197 = function (t569) {
             var t285 = t281;
             var t1198 = function (t574) {
              var t286 = t574;
              var t1199 = SPOCK.equalp(t285, t286);
              var t570 = t1199;
              var t1200;
              if(t570 !== false) {
               var t1201 = function (t571) {
                return ___filetree_2dreplace_2dchildren(k566, t282, t571);
               };
               return ___make_2dfiletree_2dchildren(t1201, t280);
              }
              else {
               var t1204 = function (t573) {
                var t1205 = function (t572) {
                 var t1206;
                 if(t572 !== false) {
                  return ___filetree_2dinsert_2dchildren(k566, t282, t280, t281);
                 }
                 else {
                  return k566(t282);
                 }
                };
                return ___substring_3d_3f(t1205, t573, t281);
               };
               return ___filetree_2dpath(t1204, t282);
              }
             };
             return ___filetree_2dpath(t1198, t282);
            };
            return ___print(t1197, t575);
           };
           return ___substring_3d_3f(t1196, t576, t281);
          };
          return ___filetree_2dpath(t1195, t282);
         };
         return ___print(t1194, t577);
        };
        return ___filetree_2dpath(t1192, t282);
       };
       return ___print(t1191, "PATH ", t281, " = ", t579, "?");
      };
      return ___filetree_2dpath(t1190, t282);
     };
     return ___map(t1187, t1189, t580);
    };
    return ___filetree_2dchildren(t1186, t279);
   };
   return ___print(t1185, "inserting ", t281, " into ", t581);
  };
  return ___filetree_2dpath(t1184, t279);
 };
 ___filetree_2dinsert_2dchildren = t1183;	// set! filetree-insert-children
 var t1223 = function (k582, t287, t288) {	// filetree-remove-children
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1224 = function (t589) {
   var t1225 = function (k583, t289) {
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t290 = t288;
    var t1226 = function (t588) {
     var t291 = t588;
     var t1227 = SPOCK.equalp(t290, t291);
     var t584 = t1227;
     var t1228;
     if(t584 !== false) {
      var t1229 = null;
      return ___filetree_2dreplace_2dchildren(k583, ___file, t1229);
     }
     else {
      var t1231 = function (t587) {
       var t1232 = function (t585) {
        var t1233;
        if(t585 !== false) {
         var t1234 = function (t586) {
          return ___filetree_2dreplace_2dchildren(k583, ___file, t586);
         };
         return ___filetree_2dremove_2dchildren(t1234, ___node, t288);
        }
        else {
         return k583(___node);
        }
       };
       return ___substring_3d_3f(t1232, t587, t288);
      };
      return ___filetree_2dpath(t1231, ___node);
     }
    };
    return ___filetree_2dpath(t1226, ___node);
   };
   return ___map(k582, t1225, t589);
  };
  return ___filetree_2dchildren(t1224, t287);
 };
 ___filetree_2dremove_2dchildren = t1223;	// set! filetree-remove-children
 var t1243 = function (k590, t292) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t293 = undefined;
  var t1244 = function (t598) {
   t293 = t598;	// set! t293
   var t591 = undefined;
   var t1245 = function (k592, t301) {	// t300
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1246 = function (k593) {
     var t302 = t301;
     var t1247 = function(k1248, x) { return k1248(x.target); }
     var t1249 = function (t594) {
      var t1250 = function(k1251, x) { return k1251(x.value); }
      return t1250(k593, t594);
     };
     return t1247(t1249, t302);
    };
    var t1254 = function (k595, t303) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1255 = function (t597) {
      var t304 = t597;
      var t596 = t304;
      return ___send_2dvars(k595, t596);
     };
     var t1257 = SPOCK.intern("user");
     var t305 = t1257;
     var t306 = t303;
     var t1258 = new SPOCK.Pair(t305, t306);
     return ____25list(t1255, t1258);
    };
    return ___call_2dwith_2dvalues(k592, t1246, t1254);
   };
   var t300 = t1245;
   var t1261 = SPOCK.callback(t300);
   t292.onchange = t1261;
   return ___yield(k590);
  };
  var t1263 = function (k599, t294) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1264 = function (k602, t296) {	// t295
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1265 = function (t603) {
     return t294(k602, t603);
    };
    return ___append(t1265, t296, t293);
   };
   var t295 = t1264;
   var t1268 = function (t606) {
    var t298 = t606;
    var t605 = t298;
    var t1269 = function (t600) {
     var t1270 = function (t601) {
      var t299 = t601;
      return k599(t299);
     };
     return ____25list(t1270);
    };
    var t1273 = function (k604, t297) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1274 = SPOCK.intern("continuations");
     return ___put_2dcons_21(k604, t297, t1274, t295);
    };
    return ___map(t1269, t1273, t605);
   };
   return ____25list(t1268);
  };
  return ___call_2fcc(t1244, t1263);
 };
 return ___register_2dcomponent(k434, "change-user", t1243);
};
SPOCK.run(t772);
var t1280 = function (k607) {
 var t1281 = function (k608, t307) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t308 = t307;
  var t309 = undefined;
  var t1282 = function (t632) {
   t309 = t632;	// set! t309
   var t609 = undefined;
   var t1283 = function (t611) {
    var t316 = t611;
    var t1284 = function (t625) {
     var t1285 = function (t615) {
      var t1286 = function (t624) {
       var t1287 = function (t623) {
        var t1288 = function (t617) {
         var t325 = t617;
         var t1289 = function (t621) {	// t622
          var t1290 = function (t618) {
           var t326 = t618;
           var t1291 = new SPOCK.Pair(t325, t326);
           var t616 = t1291;
           var t1292 = function (t612) {
            var t317 = t612;
            var t1293 = function (t610) {	// t613
             return ___yield(k608);
            };
            var t613 = t1293;
            var t1295;
            if(t317 !== false) {
             var t1296 = function (t614) {
              t308 = t614;	// set! t308
              return t613(undefined);
             };
             return ___patch(t1296, t308, t317);
            }
            else {
             return t613(t308);
            }
           };
           return ___h(t1292, "select", t615, t616);
          };
          var t1301 = function (k619, t327) {
           var r = SPOCK.count(arguments);
           if(r) return r;
           var t1302 = function(k1303, x) { return k1303(x.name); }
           var t1304 = function (t620) {
            return ___h(k619, "option", false, t620);
           };
           return t1302(t1304, t327);
          };
          return ___map(t1290, t1301, t621);
         };
         var t622 = t1289;
         var t328 = t316;
         var t1309 = (t328) instanceof Array ;
         var t1308;
         if(t1309 !== false) {
          return ___vector_2d_3elist(t622, t316);
         }
         else {
          var t1311 = null;
          return t622(t1311);
         }
        };
        return ___h(t1288, "option", t623, "----");
       };
       return ____25(t1287, "props", t624);
      };
      return ____25(t1286, "value", false);
     };
     return ____25(t1285, "on", t625);
    };
    var t1317 = function (k626, t319) {	// t318
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1318 = function (k627) {
      var t320 = t319;
      var t1319 = function(k1320, x) { return k1320(x.target); }
      var t1321 = function (t628) {
       var t1322 = function(k1323, x) { return k1323(x.value); }
       return t1322(k627, t628);
      };
      return t1319(t1321, t320);
     };
     var t1326 = function (k629, t321) {
      var r = SPOCK.count(arguments);
      if(r) return r;
      var t1327 = function (t631) {
       var t322 = t631;
       var t630 = t322;
       return ___send_2dvars(k629, t630);
      };
      var t1329 = SPOCK.intern("repo");
      var t323 = t1329;
      var t324 = t321;
      var t1330 = new SPOCK.Pair(t323, t324);
      return ____25list(t1327, t1330);
     };
     return ___call_2dwith_2dvalues(k626, t1318, t1326);
    };
    var t318 = t1317;
    var t1333 = SPOCK.callback(t318);
    return ____25(t1284, "change", t1333);
   };
   var t1335 = SPOCK.intern("repos");
   return ___assoc_2dval(t1283, t1335, t309);
  };
  var t1337 = function (k633, t310) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1338 = function (k637, t312) {	// t311
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1339 = function (t638) {
     return t310(k637, t638);
    };
    return ___append(t1339, t312, t309);
   };
   var t311 = t1338;
   var t1342 = function (t641) {
    var t314 = t641;
    var t640 = t314;
    var t1343 = function (t634) {
     var t1344 = function (t636) {
      var t1345 = function (t635) {
       var t315 = t635;
       return k633(t315);
      };
      return ____25list(t1345, t636);
     };
     var t1348 = SPOCK.intern("repos");
     return ___assoc(t1344, t1348, ____2ainits_2a);
    };
    var t1350 = function (k639, t313) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1351 = SPOCK.intern("continuations");
     return ___put_2dcons_21(k639, t313, t1351, t311);
    };
    return ___map(t1343, t1350, t640);
   };
   var t1354 = SPOCK.intern("repos");
   return ____25list(t1342, t1354);
  };
  return ___call_2fcc(t1282, t1337);
 };
 return ___register_2dcomponent(k607, "choose-repository", t1281);
};
SPOCK.run(t1280);
var t1358 = function (k642) {
 var t1359 = function (k643, t329, t330, t331) {	// open-close-switch
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t332 = t331;
  var t333 = t332;
  var t1361 = null;
  var t334 = t1361;
  var t1362 = (t333) === (t334);
  var t1360;
  if(t1362 !== false) {
   var t1363 = function (k644, t336) {	// t335
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1364 = function (k645) {
     var t337 = t336;
     var t1365 = function(k1366, x) { return k1366(x.url); }
     var t1367 = function (t647) {
      var t338 = t647;
      var t1368 = function(k1369, x) { return k1369(x.path); }
      var t1370 = function (t648) {
       var t339 = t648;
       var t1371 = new SPOCK.Pair(t338, t339);
       var t646 = t1371;
       return ___values(k645, t646);
      };
      return t1368(t1370, t330);
     };
     return t1365(t1367, t330);
    };
    var t1375 = function (k649, t340) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1376 = function (t651) {
      var t341 = t651;
      var t650 = t341;
      return ___send_2dvars(k649, t650);
     };
     var t1378 = SPOCK.intern("file-to-open");
     var t342 = t1378;
     var t343 = t340;
     var t1379 = new SPOCK.Pair(t342, t343);
     return ____25list(t1376, t1379);
    };
    return ___call_2dwith_2dvalues(k644, t1364, t1375);
   };
   var t335 = t1363;
   var t1382 = SPOCK.callback(t335);
   return ___a_2dclick(k643, false, "+", t1382);
  }
  else {
   var t344 = t331;
   var t1385 = SPOCK.intern("loading");
   var t345 = t1385;
   var t1386 = SPOCK.equalp(t344, t345);
   var t1384;
   if(t1386 !== false) {
    return k643("...");
   }
   else {
    var t1388 = function (k652, t347) {	// t346
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1389 = function (k653) {
      var t348 = t347;
      var t1390 = function(k1391, x) { return k1391(x.path); }
      var t1392 = function (t654) {
       return ___values(k653, false, t654, t329);
      };
      return t1390(t1392, t330);
     };
     var t1395 = function (k655, t349, t350, t351) {
      var r = SPOCK.count(arguments);
      if(r) return r;
      var t1396 = function (t657) {
       var t352 = t657;
       var t656 = t352;
       return ___send_2dvars(k655, t656);
      };
      var t1398 = SPOCK.intern("newfile");
      var t353 = t1398;
      var t354 = t349;
      var t1399 = new SPOCK.Pair(t353, t354);
      var t1400 = SPOCK.intern("file-to-close");
      var t355 = t1400;
      var t356 = t350;
      var t1401 = new SPOCK.Pair(t355, t356);
      var t1402 = SPOCK.intern("current-files");
      var t357 = t1402;
      var t358 = t351;
      var t1403 = new SPOCK.Pair(t357, t358);
      return ____25list(t1396, t1399, t1401, t1403);
     };
     return ___call_2dwith_2dvalues(k652, t1389, t1395);
    };
    var t346 = t1388;
    var t1406 = SPOCK.callback(t346);
    return ___a_2dclick(k643, false, "-", t1406);
   }
   t1360 = t1384;
  }
 };
 ___open_2dclose_2dswitch = t1359;	// set! open-close-switch
 var t1408 = function (k658, t359) {	// file-explorer
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1409 = function (k659, t360) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1410;
   if(t360 !== false) {
    var t1411 = function (t671) {
     var t361 = t671;
     var t362 = "dir";
     var t1412 = SPOCK.equalp(t361, t362);
     var t660 = t1412;
     var t1413;
     if(t660 !== false) {
      var t1414 = function (t668) {
       var t1415 = function (t669) {
        var t1416 = function (t662) {
         var t1417 = function (t663) {
          var t1418 = function (t666) {
           var t1419 = function (t667) {
            var t1420 = function (t665) {
             var t1421 = function (t664) {
              var t1422 = function (t661) {
               return ___h(k659, "li.dir", false, t661);
              };
              return ___vector(t1422, t662, t663, t664);
             };
             return ___h(t1421, "ul.files", false, t665);
            };
            return ___map(t1420, t666, t667);
           };
           return ___filetree_2dchildren(t1419, t360);
          };
          return ___file_2dexplorer(t1418, t359);
         };
         return ___filetree_2dpath(t1417, t360);
        };
        return ___open_2dclose_2dswitch(t1416, t359, t668, t669);
       };
       return ___filetree_2dchildren(t1415, t360);
      };
      return ___filetree_2dfile(t1414, t360);
     }
     else {
      var t1433 = function (t670) {
       return ___h(k659, "li", false, t670);
      };
      return ___filetree_2dpath(t1433, t360);
     }
    };
    return ___filetree_2dtype(t1411, t360);
   }
   else {
    return k659(undefined);
   }
  };
  return k658(t1409);
 };
 ___file_2dexplorer = t1408;	// set! file-explorer
 var t1439 = function (k672, t363) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t364 = t363;
  var t365 = undefined;
  var t1440 = function (t682) {
   t365 = t682;	// set! t365
   var t673 = undefined;
   var t1441 = function (t675) {
    var t372 = t675;
    var t1442 = function (t680) {
     var t1443 = function (t681) {
      var t1444 = function (t679) {
       var t1445 = function (t676) {
        var t373 = t676;
        var t1446 = function (t674) {	// t677
         return ___yield(k672);
        };
        var t677 = t1446;
        var t1448;
        if(t373 !== false) {
         var t1449 = function (t678) {
          t364 = t678;	// set! t364
          return t677(undefined);
         };
         return ___patch(t1449, t364, t373);
        }
        else {
         return t677(t364);
        }
       };
       return ___h(t1445, "ul", false, t679);
      };
      return ___map(t1444, t680, t681);
     };
     return ___filetree_2dchildren(t1443, t372);
    };
    return ___file_2dexplorer(t1442, t372);
   };
   var t1457 = SPOCK.intern("files");
   return ___assoc_2dval(t1441, t1457, t365);
  };
  var t1459 = function (k683, t366) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1460 = function (k687, t368) {	// t367
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1461 = function (t688) {
     return t366(k687, t688);
    };
    return ___append(t1461, t368, t365);
   };
   var t367 = t1460;
   var t1464 = function (t691) {
    var t370 = t691;
    var t690 = t370;
    var t1465 = function (t684) {
     var t1466 = function (t686) {
      var t1467 = function (t685) {
       var t371 = t685;
       return k683(t371);
      };
      return ____25list(t1467, t686);
     };
     var t1470 = SPOCK.intern("files");
     return ___assoc(t1466, t1470, ____2ainits_2a);
    };
    var t1472 = function (k689, t369) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1473 = SPOCK.intern("continuations");
     return ___put_2dcons_21(k689, t369, t1473, t367);
    };
    return ___map(t1465, t1472, t690);
   };
   var t1476 = SPOCK.intern("files");
   return ____25list(t1464, t1476);
  };
  return ___call_2fcc(t1440, t1459);
 };
 return ___register_2dcomponent(k642, "explorer", t1439);
};
SPOCK.run(t1358);
var t1480 = function (k692) {
 var t1481 = null;
 ____2ainits_2a = t1481;	// set! *inits*
 var t1482 = function (t695) {
  var t1483 = function (k693, t374) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1484 = t374.getAttribute("spock");
   var t375 = t1484;
   var t1485 = function (t694) {
    return t694(k693, t374);
   };
   return ___get_2dcallback(t1485, t375);
  };
  return ___map(k692, t1483, t695);
 };
 return ___spock_2delements(t1482);
};
SPOCK.run(t1480);
var t1490 = function (k696) {
 var t376 = undefined;
 var t1491 = function (t706) {
  t376 = t706;	// set! t376
  var t697 = undefined;
  var t1492 = function (t699) {
   var t383 = t699;
   var t1493 = function (t698) {	// t700
    return ___yield(k696);
   };
   var t700 = t1493;
   var t1495;
   if(t383 !== false) {
    var t1496 = function (k701, t384) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1497 = function (k702) {
      loop: while(true) {
       return k702(t384);
      }
     };
     var t1499 = function (k703, t385) {
      var r = SPOCK.count(arguments);
      if(r) return r;
      var t1500 = function (t705) {
       var t386 = t705;
       var t704 = t386;
       return ___send_2dvars(k703, t704);
      };
      var t1502 = SPOCK.intern("repos");
      var t387 = t1502;
      var t388 = t385;
      var t1503 = new SPOCK.Pair(t387, t388);
      return ____25list(t1500, t1503);
     };
     return ___call_2dwith_2dvalues(k701, t1497, t1499);
    };
    return ___github_2dapi_2drepos(t700, t383, t1496);
   }
   else {
    return t700(undefined);
   }
  };
  var t1508 = SPOCK.intern("user");
  return ___assoc_2dval(t1492, t1508, t376);
 };
 var t1510 = function (k707, t377) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1511 = function (k711, t379) {	// t378
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1512 = function (t712) {
    return t377(k711, t712);
   };
   return ___append(t1512, t379, t376);
  };
  var t378 = t1511;
  var t1515 = function (t715) {
   var t381 = t715;
   var t714 = t381;
   var t1516 = function (t708) {
    var t1517 = function (t710) {
     var t1518 = function (t709) {
      var t382 = t709;
      return k707(t382);
     };
     return ____25list(t1518, t710);
    };
    var t1521 = SPOCK.intern("user");
    return ___assoc(t1517, t1521, ____2ainits_2a);
   };
   var t1523 = function (k713, t380) {
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1524 = SPOCK.intern("continuations");
    return ___put_2dcons_21(k713, t380, t1524, t378);
   };
   return ___map(t1516, t1523, t714);
  };
  var t1527 = SPOCK.intern("user");
  return ____25list(t1515, t1527);
 };
 return ___call_2fcc(t1491, t1510);
};
SPOCK.run(t1490);
var t1530 = function (k716) {
 var t389 = undefined;
 var t1531 = function (t730) {
  t389 = t730;	// set! t389
  var t717 = undefined;
  var t1532 = function (t719) {
   var t396 = t719;
   var t1533 = function (t720) {
    var t397 = t720;
    var t1534 = function (t718) {	// t721
     return ___yield(k716);
    };
    var t721 = t1534;
    var t1537;
    if(t396 !== false) {
     t1537 = t397;
    }
    else {
     t1537 = false;
    }
    var t1536;
    if(t1537 !== false) {
     var t1538 = function (k722, t398) {
      var r = SPOCK.count(arguments);
      if(r) return r;
      var t1539 = function (t728) {
       var t1540 = function (t729) {
        var t1541 = function (t723) {
         var t399 = t723;
         var t1542 = function (k724) {
          loop: while(true) {
           return k724(t399);
          }
         };
         var t1544 = function (k725, t400) {
          var r = SPOCK.count(arguments);
          if(r) return r;
          var t1545 = function (t727) {
           var t401 = t727;
           var t726 = t401;
           return ___send_2dvars(k725, t726);
          };
          var t1547 = SPOCK.intern("files");
          var t402 = t1547;
          var t403 = t400;
          var t1548 = new SPOCK.Pair(t402, t403);
          return ____25list(t1545, t1548);
         };
         return ___call_2dwith_2dvalues(k722, t1542, t1544);
        };
        return ___make_2dfiletree(t1541, t728, t729);
       };
       return ___make_2dfiletree_2dchildren(t1540, t398);
      };
      return ____25(t1539, "path", "");
     };
     return ___github_2dapi_2drepo(t721, t396, t397, t1538);
    }
    else {
     return t721(undefined);
    }
   };
   var t1556 = SPOCK.intern("repo");
   return ___assoc_2dval(t1533, t1556, t389);
  };
  var t1558 = SPOCK.intern("user");
  return ___assoc_2dval(t1532, t1558, t389);
 };
 var t1560 = function (k731, t390) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1561 = function (k736, t392) {	// t391
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1562 = function (t737) {
    return t390(k736, t737);
   };
   return ___append(t1562, t392, t389);
  };
  var t391 = t1561;
  var t1565 = function (t740) {
   var t394 = t740;
   var t739 = t394;
   var t1566 = function (t732) {
    var t1567 = function (t734) {
     var t1568 = function (t735) {
      var t1569 = function (t733) {
       var t395 = t733;
       return k731(t395);
      };
      return ____25list(t1569, t734, t735);
     };
     var t1572 = SPOCK.intern("repo");
     return ___assoc(t1568, t1572, ____2ainits_2a);
    };
    var t1574 = SPOCK.intern("user");
    return ___assoc(t1567, t1574, ____2ainits_2a);
   };
   var t1576 = function (k738, t393) {
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1577 = SPOCK.intern("continuations");
    return ___put_2dcons_21(k738, t393, t1577, t391);
   };
   return ___map(t1566, t1576, t739);
  };
  var t1580 = SPOCK.intern("user");
  var t1581 = SPOCK.intern("repo");
  return ____25list(t1565, t1580, t1581);
 };
 return ___call_2fcc(t1531, t1560);
};
SPOCK.run(t1530);
var t1584 = function (k741) {
 var t404 = undefined;
 var t1585 = function (t759) {
  t404 = t759;	// set! t404
  var t742 = undefined;
  var t1586 = function (t744) {
   var t411 = t744;
   var t1587 = function (t745) {
    var t412 = t745;
    var t1588 = function (t746) {
     var t413 = t746;
     var t1589 = function (t743) {	// t747
      return ___yield(k741);
     };
     var t747 = t1589;
     var t414 = t412;
     var t1592;
     if(t414 !== false) {
      t1592 = t414;
     }
     else {
      t1592 = t413;
     }
     var t1591;
     if(t1592 !== false) {
      var t1593;
      if(t412 !== false) {
       var t415 = t412;
       var t416 = t415;
       var t1594 = t416.car;
       var t1595 = function (k748, t417) {
        var r = SPOCK.count(arguments);
        if(r) return r;
        var t1596 = function (t749) {
         var t1597 = function (t750) {
          var t1598 = function (t751) {
           var t1599 = function (t758) {
            var t1600 = function (t752) {
             var t1601 = function (k753) {
              var t1602 = function (t754) {
               return ___values(k753, false, false, t754);
              };
              var t422 = t412;
              var t423 = t422;
              var t1604 = t423.cdr;
              return ___filetree_2dinsert_2dchildren(t1602, t411, t417, t1604);
             };
             var t1606 = function (k755, t424, t425, t426) {
              var r = SPOCK.count(arguments);
              if(r) return r;
              var t1607 = function (t757) {
               var t427 = t757;
               var t756 = t427;
               return ___send_2dvars(k755, t756);
              };
              var t1609 = SPOCK.intern("file-to-open");
              var t428 = t1609;
              var t429 = t424;
              var t1610 = new SPOCK.Pair(t428, t429);
              var t1611 = SPOCK.intern("file-to-close");
              var t430 = t1611;
              var t431 = t425;
              var t1612 = new SPOCK.Pair(t430, t431);
              var t1613 = SPOCK.intern("files");
              var t432 = t1613;
              var t433 = t426;
              var t1614 = new SPOCK.Pair(t432, t433);
              return ____25list(t1607, t1610, t1612, t1614);
             };
             return ___call_2dwith_2dvalues(k748, t1601, t1606);
            };
            return ___log(t1600, t758);
           };
           var t420 = t412;
           var t421 = t420;
           var t1618 = t421.cdr;
           return ___filetree_2dinsert_2dchildren(t1599, t411, t417, t1618);
          };
          return ___log(t1598, t411);
         };
         return ___log(t1597, t417);
        };
        var t418 = t412;
        var t419 = t418;
        var t1622 = t419.cdr;
        return ___print(t1596, "inserting ", t1622);
       };
       return ___github_2dapi_2dcall(t747, t1594, t1595);
      }
      else {
       return t747(false);
      }
      t1591 = t1593;
     }
     else {
      return t747(undefined);
     }
    };
    var t1627 = SPOCK.intern("file-to-close");
    return ___assoc_2dval(t1588, t1627, t404);
   };
   var t1629 = SPOCK.intern("file-to-open");
   return ___assoc_2dval(t1587, t1629, t404);
  };
  var t1631 = SPOCK.intern("files");
  return ___assoc_2dval(t1586, t1631, t404);
 };
 var t1633 = function (k760, t405) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1634 = function (k766, t407) {	// t406
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1635 = function (t767) {
    return t405(k766, t767);
   };
   return ___append(t1635, t407, t404);
  };
  var t406 = t1634;
  var t1638 = function (t770) {
   var t409 = t770;
   var t769 = t409;
   var t1639 = function (t761) {
    var t1640 = function (t763) {
     var t1641 = function (t764) {
      var t1642 = function (t765) {
       var t1643 = function (t762) {
        var t410 = t762;
        return k760(t410);
       };
       return ____25list(t1643, t763, t764, t765);
      };
      var t1646 = SPOCK.intern("file-to-close");
      return ___assoc(t1642, t1646, ____2ainits_2a);
     };
     var t1648 = SPOCK.intern("file-to-open");
     return ___assoc(t1641, t1648, ____2ainits_2a);
    };
    var t1650 = SPOCK.intern("files");
    return ___assoc(t1640, t1650, ____2ainits_2a);
   };
   var t1652 = function (k768, t408) {
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1653 = SPOCK.intern("continuations");
    return ___put_2dcons_21(k768, t408, t1653, t406);
   };
   return ___map(t1639, t1652, t769);
  };
  var t1656 = SPOCK.intern("files");
  var t1657 = SPOCK.intern("file-to-open");
  var t1658 = SPOCK.intern("file-to-close");
  return ____25list(t1638, t1656, t1657, t1658);
 };
 return ___call_2fcc(t1585, t1633);
};
SPOCK.run(t1584);
var t1661 = function (k771) {
 return ___start(k771);
};
SPOCK.run(t1661);
SPOCK.flush();
/* END OF GENERATED CODE */
