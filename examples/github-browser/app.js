/* CODE GENERATED BY SPOCK 0 */
var t619 = function (k355) {
 var t620 = function (k356, t1, t2) {	// qsa
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t621 = t1.querySelectorAll(t2);
   return k356(t621);
  }
 };
 ___qsa = t620;	// set! qsa
 var t623 = function (k357, t3, t4) {	// qs
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t624 = t3.querySelector(t4);
   return k357(t624);
  }
 };
 ___qs = t623;	// set! qs
 var t626 = function (k358, t5, t6) {	// dqsa
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t627 = document.body.querySelectorAll(t6);
   return k358(t627);
  }
 };
 ___dqsa = t626;	// set! dqsa
 var t629 = function (k359, t7, t8) {	// dqs
  var r = SPOCK.count(arguments);
  if(r) return r;
  return ___qs(k359, document.body, t8);
 };
 ___dqs = t629;	// set! dqs
 var t631 = function (k360, t9) {	// log
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t632 = console.log(t9);
   return k360(t632);
  }
 };
 ___log = t631;	// set! log
 var t634 = function (k361, t10) {	// alert
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t635 = window.alert(t10);
   return k361(t635);
  }
 };
 ___alert = t634;	// set! alert
 var t637 = function (k362, t11) {	// get-id
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t638 = document.getElementById(t11);
   return k362(t638);
  }
 };
 ___get_2did = t637;	// set! get-id
 var t640 = function (k363, t12) {	// remove-node
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t641 = function(k642, x) { return k642(x.parentNode); }
  var t643 = function (t364) {
   var t644 = t364.removeChild(t12);
   return k363(t644);
  };
  return t641(t643, t12);
 };
 ___remove_2dnode = t640;	// set! remove-node
 var t647 = function (k365, t13, t14) {	// insert-node-before
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t648 = function(k649, x) { return k649(x.parentNode); }
  var t650 = function (t366) {
   var t651 = t366.insertBefore(t13, t14);
   return k365(t651);
  };
  return t648(t650, t14);
 };
 ___insert_2dnode_2dbefore = t647;	// set! insert-node-before
 var t654 = function (k367, t15, t16) {	// replace-node
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t655 = function(k656, x) { return k656(x.parentNode); }
  var t657 = function (t368) {
   var t658 = t368.replaceChild(t15, t16);
   return k367(t658);
  };
  return t655(t657, t16);
 };
 ___replace_2dnode = t654;	// set! replace-node
 var t661 = function (k369, t17, t18) {	// node-append-child
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t662 = t17.appendChild(t18);
   return k369(t662);
  }
 };
 ___node_2dappend_2dchild = t661;	// set! node-append-child
 var t664 = function (k370, t19, t20) {	// set-html
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   t19.innerHTML = t20;
   return k370(t20);
  }
 };
 ___set_2dhtml = t664;	// set! set-html
 var t666 = function (k371) {	// spock-elements
  loop: while(true) {
   var t668 = document.body.querySelectorAll("*[spock]");
   var t667 = Array.prototype.slice.call(t668);
   return k371(t667);
  }
 };
 ___spock_2delements = t666;	// set! spock-elements
 var t670 = function (k372, t21, t22, t23) {	// add-event-listener
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t671 = t22.addEventListener(t21, t23);
   return k372(t671);
  }
 };
 ___add_2devent_2dlistener = t670;	// set! add-event-listener
 var t673 = function (k373, t24, t25, t26) {	// set-event
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   t25.event = t26;
   return k373(t25);
  }
 };
 ___set_2devent = t673;	// set! set-event
 var t675 = function (k374, t27, t28) {	// set-click
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   t27.onclick = t28;
   return k374(t27);
  }
 };
 ___set_2dclick = t675;	// set! set-click
 var t677 = function (k375, t29, t30) {	// set-change
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   t29.onchange = t30;
   return k375(t29);
  }
 };
 ___set_2dchange = t677;	// set! set-change
 var t679 = function (k376, t31, t32) {	// set-input
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   t31.oninput = t32;
   return k376(t31);
  }
 };
 ___set_2dinput = t679;	// set! set-input
 var t681 = function (k377, t33, t34) {	// old-set-click
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   t33.onclick = t34;
   return k377(t33);
  }
 };
 ___old_2dset_2dclick = t681;	// set! old-set-click
 var t683 = function (k378, t35) {	// slice
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t684 = Array.prototype.slice.call(t35);
   return k378(t684);
  }
 };
 ___slice = t683;	// set! slice
 var t686 = function (k379, t36) {	// children
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t687 = t36.childNodes;
  return ___slice(k379, t687);
 };
 ___children = t686;	// set! children
 var t689 = function (k380, t37) {	// car-safe
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t38 = t37;
   var t691 = (t38) instanceof SPOCK.Pair ;
   var t690;
   if(t691 !== false) {
    var t39 = t37;
    var t40 = t39;
    var t692 = t40.car;
    t690 = t692;
   }
   else {
    t690 = false;
   }
   return k380(t690);
  }
 };
 ___car_2dsafe = t689;	// set! car-safe
 var t694 = function (k381, t41) {	// cdr-safe
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t42 = t41;
   var t696 = (t42) instanceof SPOCK.Pair ;
   var t695;
   if(t696 !== false) {
    var t43 = t41;
    var t44 = t43;
    var t697 = t44.cdr;
    t695 = t697;
   }
   else {
    t695 = false;
   }
   return k381(t695);
  }
 };
 ___cdr_2dsafe = t694;	// set! cdr-safe
 var t699 = function (k382, t45) {	// empty?
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t47 = t45;
   var t701 = t47 === undefined;
   var t700;
   if(t701 !== false) {
    var t48 = t45;
    var t49 = t48;
    var t703 = null;
    var t50 = t703;
    var t704 = (t49) === (t50);
    var t702;
    if(t704 !== false) {
     var t51 = t45;
     var t705;
     if(t51 !== false) {
      t705 = false;
     }
     else {
      t705 = true;
     }
     t702 = t705;
    }
    else {
     t702 = false;
    }
    t700 = t702;
   }
   else {
    t700 = false;
   }
   var t46 = t700;
   var t706;
   if(t46 !== false) {
    t706 = false;
   }
   else {
    t706 = true;
   }
   return k382(t706);
  }
 };
 ___empty_3f = t699;	// set! empty?
 var t708 = function (k383, t52) {	// nodename
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t709 = t52.nodeName;
   return k383(t709);
  }
 };
 ___nodename = t708;	// set! nodename
 var t711 = function (k384, t53, t54, t55) {	// h
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t712 = function (t385) {	// t386
   var t56 = t385;
   var t713 = snabbdom.h(t53, t54, t56);
   return k384(t713);
  };
  var t386 = t712;
  var t715 = function (t387) {
   var t716;
   if(t387 !== false) {
    return ___list_2d_3evector(t386, t55);
   }
   else {
    var t58 = t55;
    var t719 = (t58) instanceof Array ;
    var t57 = t719;
    var t720;
    if(t57 !== false) {
     t720 = t57;
    }
    else {
     var t59 = t55;
     var t721 = typeof(t59);
     var t61 = t721;
     var t62 = "string";
     var t722 = (t61) === (t62);
     var t60 = t722;
     var t723;
     if(t60 !== false) {
      t723 = t60;
     }
     else {
      var t724 = (t59) instanceof SPOCK.String ;
      t723 = t724;
     }
     t720 = t723;
    }
    var t718;
    if(t720 !== false) {
     t718 = t55;
    }
    else {
     t718 = false;
    }
    return t386(t718);
   }
  };
  return ___list_3f(t715, t55);
 };
 ___h = t711;	// set! h
 var t727 = function (k388, t63, t64) {	// patch
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t728 = patch(t63, t64);
   return k388(t728);
  }
 };
 ___patch = t727;	// set! patch
 var t730 = function (k389, t65) {	// ajax-cb
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t731 = function(k732, x) { return k732(x.responseText); }
  var t733 = function (t390) {
   return ___log(k389, t390);
  };
  return t731(t733, t65);
 };
 ___ajax_2dcb = t730;	// set! ajax-cb
 var t736 = function (k391, t66, t67, t68) {	// ajax
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t737 = new XMLHttpRequest();
   var t69 = t737;
   var t738 = t69.open(t66, t67, true);
   t69.onreadystatechange = t68;
   t69.responseType = "json";
   var t739 = t69.send();
   return k391(t739);
  }
 };
 ___ajax = t736;	// set! ajax
 var t741 = function (k392, t70) {	// get-callback
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t742 = function (t393) {	// t394
   var t71 = t393;
   var t743 = SPOCK.intern("callback");
   return ___get(k392, t71, t743);
  };
  var t394 = t742;
  var t72 = t70;
  var t746 = typeof(t72);
  var t74 = t746;
  var t75 = "string";
  var t747 = (t74) === (t75);
  var t73 = t747;
  var t748;
  if(t73 !== false) {
   t748 = t73;
  }
  else {
   var t749 = (t72) instanceof SPOCK.String ;
   t748 = t749;
  }
  var t745;
  if(t748 !== false) {
   return ___string_2d_3esymbol(t394, t70);
  }
  else {
   return t394(t70);
  }
 };
 ___get_2dcallback = t741;	// set! get-callback
 var t752 = function (k395) {	// waiting
  loop: while(true) {
   return k395(false);
  }
 };
 ___waiting = t752;	// set! waiting
 ___call_2fcc = ___call_2dwith_2dcurrent_2dcontinuation;	// set! call/cc
 var t754 = null;
 ____2aqueue_2a = t754;	// set! *queue*
 var t755 = function (k396, t76) {	// *enqueue*
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t756 = function (t399) {
   var t77 = t399;
   var t398 = t77;
   var t757 = function (t397) {
    ____2aqueue_2a = t397;	// set! *queue*
    return k396(undefined);
   };
   return ___append(t757, ____2aqueue_2a, t398);
  };
  return ____25list(t756, t76);
 };
 ____2aenqueue_2a = t755;	// set! *enqueue*
 var t761 = function (k400) {	// *dequeue*
  loop: while(true) {
   var t79 = ____2aqueue_2a;
   var t80 = t79;
   var t762 = t80.car;
   var t78 = t762;
   var t81 = ____2aqueue_2a;
   var t82 = t81;
   var t763 = t82.cdr;
   ____2aqueue_2a = t763;	// set! *queue*
   return k400(t78);
  }
 };
 ____2adequeue_2a = t761;	// set! *dequeue*
 var t765 = function (k401) {	// yield
  var t83 = ____2aqueue_2a;
  var t84 = t83;
  var t767 = null;
  var t85 = t767;
  var t768 = (t84) === (t85);
  var t766;
  if(t768 !== false) {
   return ___waiting(k401);
  }
  else {
   var t770 = function (t402) {
    var t86 = t402;
    var t771 = function (t403) {
     var t772 = function (t404) {
      return t404(k401);
     };
     return t86(t772);
    };
    return ___print(t771, "YIELDING");
   };
   return ____2adequeue_2a(t770);
  }
 };
 ___yield = t765;	// set! yield
 var t777 = function (k405, t87, t88) {	// assoc-val
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t778 = function (t406) {
   return ___cdr_2dsafe(k405, t406);
  };
  return ___assoc(t778, t87, t88);
 };
 ___assoc_2dval = t777;	// set! assoc-val
 ___merge_2dbindings = ___append;	// set! merge-bindings
 var t781 = function (k407, t89, t90, t91) {	// put-cons!
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t92 = t91;
  var t782 = function (t410) {
   var t94 = t410;
   var t783;
   if(t94 !== false) {
    t783 = t94;
   }
   else {
    var t784 = null;
    t783 = t784;
   }
   var t409 = t783;
   var t93 = t409;
   var t785 = new SPOCK.Pair(t92, t93);
   var t408 = t785;
   return ___put_21(k407, t89, t90, t408);
  };
  return ___get(t782, t89, t90);
 };
 ___put_2dcons_21 = t781;	// set! put-cons!
 var t788 = function (k411, t95, t96) {	// get-binding
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t789 = function (t412) {
   var t97 = t412;
   var t790;
   if(t97 !== false) {
    var t98 = t97;
    var t99 = t98;
    var t791 = t99.cdr;
    t790 = t791;
   }
   else {
    t790 = false;
   }
   return k411(t790);
  };
  return ___assoc(t789, t95, t96);
 };
 ___get_2dbinding = t788;	// set! get-binding
 var t794 = function (k413, t100, t101) {	// send-bindings
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t795 = function (t414) {
   return t414(k413, t101);
  };
  var t797 = SPOCK.intern("continuations");
  return ___get(t795, t100, t797);
 };
 ___send_2dbindings = t794;	// set! send-bindings
 var t799 = function (k415, t102, t103) {	// three-way-split
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t104 = undefined;
  var t800 = function (k416, t105, t106, t107, t108, t109) {	// t104
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t110 = t106;
   var t111 = t110;
   var t802 = null;
   var t112 = t802;
   var t803 = (t111) === (t112);
   var t801;
   if(t803 !== false) {
    var t804 = function (t418) {
     var t805 = function (t417) {
      var t113 = t417;
      return k416(t113);
     };
     return ____25list(t805, t418, t108, t109);
    };
    return ___append(t804, t105, t107);
   }
   else {
    var t115 = t106;
    var t116 = t115;
    var t809 = t116.car;
    var t114 = t809;
    var t117 = undefined;
    var t810 = function (k419, t118, t119) {	// t117
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t120 = t118;
     var t121 = t120;
     var t812 = null;
     var t122 = t812;
     var t813 = (t121) === (t122);
     var t811;
     if(t813 !== false) {
      var t123 = t106;
      var t124 = t123;
      var t814 = t124.cdr;
      var t125 = t114;
      var t126 = t109;
      var t815 = new SPOCK.Pair(t125, t126);
      return t104(k419, t119, t814, t107, t108, t815);
     }
     else {
      var t128 = t118;
      var t129 = t128;
      var t817 = t129.car;
      var t127 = t817;
      var t130 = t114;
      var t131 = t127;
      var t819 = SPOCK.equalp(t130, t131);
      var t818;
      if(t819 !== false) {
       var t820 = function (t420) {
        var t134 = t106;
        var t135 = t134;
        var t821 = t135.cdr;
        var t136 = t114;
        var t137 = t108;
        var t822 = new SPOCK.Pair(t136, t137);
        return t104(k419, t420, t821, t107, t822, t109);
       };
       var t132 = t118;
       var t133 = t132;
       var t824 = t133.cdr;
       return ___append(t820, t119, t824);
      }
      else {
       var t138 = t118;
       var t139 = t138;
       var t826 = t139.cdr;
       var t140 = t127;
       var t141 = t119;
       var t827 = new SPOCK.Pair(t140, t141);
       return t117(k419, t826, t827);
      }
      t811 = t818;
     }
    };
    t117 = t810;	// set! t117
    var t829 = null;
    return t117(k416, t105, t829);
   }
  };
  t104 = t800;	// set! t104
  var t831 = null;
  var t832 = null;
  var t833 = null;
  return t104(k415, t102, t103, t831, t832, t833);
 };
 ___three_2dway_2dsplit = t799;	// set! three-way-split
 var t835 = function (k421, t142, t143) {	// merge-alist-sets
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t145 = t143;
  var t146 = t145;
  var t836 = t146.car;
  var t144 = t836;
  var t147 = undefined;
  var t837 = function (k422, t148, t149, t150) {	// t147
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t152 = t149;
   var t153 = t152;
   var t839 = null;
   var t154 = t839;
   var t840 = (t153) === (t154);
   var t151 = t840;
   var t841;
   if(t151 !== false) {
    t841 = t151;
   }
   else {
    var t155 = t148;
    var t156 = t155;
    var t842 = null;
    var t157 = t842;
    var t843 = (t156) === (t157);
    t841 = t843;
   }
   var t838;
   if(t841 !== false) {
    var t844 = function (t425) {
     var t162 = t425;
     var t424 = t162;
     var t160 = t424;
     var t161 = t149;
     var t845 = new SPOCK.Pair(t160, t161);
     var t423 = t845;
     var t158 = t423;
     var t159 = t150;
     var t846 = new SPOCK.Pair(t158, t159);
     return k422(t846);
    };
    return ____25list(t844, t144);
   }
   else {
    var t164 = t148;
    var t166 = t164;
    var t167 = t166;
    var t849 = t167.car;
    var t165 = t849;
    var t168 = t165;
    var t850 = t168.car;
    var t163 = t850;
    var t170 = t148;
    var t172 = t170;
    var t173 = t172;
    var t851 = t173.car;
    var t171 = t851;
    var t174 = t171;
    var t852 = t174.cdr;
    var t169 = t852;
    var t853 = function (t426) {
     var t175 = t426;
     var t177 = t175;
     var t178 = t177;
     var t854 = t178.car;
     var t176 = t854;
     var t180 = t175;
     var t182 = t180;
     var t183 = t182;
     var t855 = t183.cdr;
     var t181 = t855;
     var t184 = t181;
     var t856 = t184.car;
     var t179 = t856;
     var t857 = function (t427) {
      var t185 = t427;
      var t858 = function (t430) {
       var t188 = t430;
       var t429 = t188;
       var t859 = function (t428) {
        var t186 = t148;
        var t187 = t186;
        var t860 = t187.cdr;
        return t147(k422, t860, t185, t428);
       };
       return ___append(t859, t429, t150);
      };
      var t189 = t163;
      var t190 = t176;
      var t863 = new SPOCK.Pair(t189, t190);
      var t193 = t144;
      var t194 = t163;
      var t864 = new SPOCK.Pair(t193, t194);
      var t191 = t864;
      var t192 = t179;
      var t865 = new SPOCK.Pair(t191, t192);
      return ____25list(t858, t863, t865);
     };
     return ___caddr(t857, t175);
    };
    return ___three_2dway_2dsplit(t853, t169, t149);
   }
  };
  t147 = t837;	// set! t147
  var t195 = t143;
  var t196 = t195;
  var t869 = t196.cdr;
  var t870 = null;
  return t147(k421, t142, t869, t870);
 };
 ___merge_2dalist_2dsets = t835;	// set! merge-alist-sets
 var t872 = function (k431, t197) {	// merge-continuation-lists
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t198 = undefined;
  var t873 = function (k432, t199, t200) {	// t198
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t201 = t200;
   var t202 = t201;
   var t875 = null;
   var t203 = t875;
   var t876 = (t202) === (t203);
   var t874;
   if(t876 !== false) {
    return k432(t199);
   }
   else {
    var t878 = function (t433) {
     var t206 = t200;
     var t207 = t206;
     var t879 = t207.cdr;
     return t198(k432, t433, t879);
    };
    var t204 = t200;
    var t205 = t204;
    var t881 = t205.car;
    return ___merge_2dalist_2dsets(t878, t199, t881);
   }
  };
  t198 = t873;	// set! t198
  var t883 = null;
  return t198(k431, t883, t197);
 };
 ___merge_2dcontinuation_2dlists = t872;	// set! merge-continuation-lists
 var t885 = function (k434, t208) {	// send-vars
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t886 = function (t441) {
   var t887 = function (t440) {
    var t888 = function (t435) {
     return ___yield(k434);
    };
    var t890 = function (k436, t209) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t891 = function (t437) {
      var t212 = t209;
      var t213 = t212;
      var t892 = t213.car;
      var t210 = t892;
      var t214 = t209;
      var t215 = t214;
      var t893 = t215.cdr;
      var t211 = t893;
      var t217 = t211;
      var t218 = t217;
      var t895 = null;
      var t219 = t895;
      var t896 = (t218) === (t219);
      var t216 = t896;
      var t897;
      if(t216 !== false) {
       t897 = false;
      }
      else {
       t897 = true;
      }
      var t894;
      if(t897 !== false) {
       var t898 = function (k438, t220) {
        var r = SPOCK.count(arguments);
        if(r) return r;
        var t899 = function (k439) {
         return t220(k439, t208);
        };
        return ____2aenqueue_2a(k438, t899);
       };
       return ___map(k436, t898, t211);
      }
      else {
       return k436(undefined);
      }
     };
     return ___print(t891, "CONTINUATIONS: ", t209);
    };
    return ___map(t888, t890, t440);
   };
   return ___merge_2dcontinuation_2dlists(t887, t441);
  };
  var t907 = function (k442, t221) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t223 = t221;
   var t224 = t223;
   var t908 = t224.car;
   var t222 = t908;
   var t225 = t222;
   var t909 = function (t443) {
    var t226 = t443;
    var t910 = new SPOCK.Pair(t225, t226);
    return k442(t910);
   };
   var t912 = SPOCK.intern("continuations");
   return ___get(t909, t222, t912);
  };
  return ___map(t886, t907, t208);
 };
 ___send_2dvars = t885;	// set! send-vars
 var t915 = function (k444, t227, t228) {	// register-component
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t916 = function (t445) {	// t446
   var t229 = t445;
   var t917 = SPOCK.intern("callback");
   return ___put_21(k444, t229, t917, t228);
  };
  var t446 = t916;
  var t230 = t227;
  var t920 = typeof(t230);
  var t232 = t920;
  var t233 = "string";
  var t921 = (t232) === (t233);
  var t231 = t921;
  var t922;
  if(t231 !== false) {
   t922 = t231;
  }
  else {
   var t923 = (t230) instanceof SPOCK.String ;
   t922 = t923;
  }
  var t919;
  if(t922 !== false) {
   return ___string_2d_3esymbol(t446, t227);
  }
  else {
   return t446(t227);
  }
 };
 ___register_2dcomponent = t915;	// set! register-component
 var t926 = function (k447) {	// start
  var t927 = function (t448) {
   return ___print(k447, "waiting...");
  };
  var t929 = function (k449, t234) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   loop: while(true) {
    ___waiting = t234;	// set! waiting
    return k449(undefined);
   }
  };
  return ___call_2fcc(t927, t929);
 };
 ___start = t926;	// set! start
 var t932 = function (k450, t235) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t236 = undefined;
  var t933 = function (t462) {
   t236 = t462;	// set! t236
   var t451 = undefined;
   var t934 = function (k452, t243) {	// t242
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t935 = function (k453) {
     var t937 = function (k454, t245) {	// t244
      var r = SPOCK.count(arguments);
      if(r) return r;
      var t938 = function(k939, x) { return k939(x.target); }
      var t940 = function (t455) {
       var t941 = function(k942, x) { return k942(x.value); }
       return t941(k454, t455);
      };
      return t938(t940, t245);
     };
     var t244 = t937;
     var t945 = typeof(t244);
     var t246 = t945;
     var t247 = "function";
     var t946 = (t246) === (t247);
     var t936;
     if(t946 !== false) {
      var t248 = t243;
      var t947 = function(k948, x) { return k948(x.target); }
      var t949 = function (t456) {
       var t950 = function(k951, x) { return k951(x.value); }
       return t950(k453, t456);
      };
      return t947(t949, t248);
     }
     else {
      var t954 = function (k457, t249) {
       var r = SPOCK.count(arguments);
       if(r) return r;
       var t955 = function(k956, x) { return k956(x.target); }
       var t957 = function (t458) {
        var t958 = function(k959, x) { return k959(x.value); }
        return t958(k457, t458);
       };
       return t955(t957, t249);
      };
      return k453(t954);
     }
    };
    var t963 = function (k459, t250) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t964 = function (t461) {
      var t251 = t461;
      var t460 = t251;
      return ___send_2dvars(k459, t460);
     };
     var t966 = SPOCK.intern("repo");
     var t252 = t966;
     var t253 = t250;
     var t967 = new SPOCK.Pair(t252, t253);
     return ____25list(t964, t967);
    };
    return ___call_2dwith_2dvalues(k452, t935, t963);
   };
   var t242 = t934;
   var t970 = SPOCK.callback(t242);
   t235.onchange = t970;
   return ___yield(k450);
  };
  var t972 = function (k463, t237) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t973 = function (t470) {
    var t240 = t470;
    var t469 = t240;
    var t974 = function (t464) {
     var t975 = function (t465) {
      var t241 = t465;
      return k463(t241);
     };
     return ____25list(t975);
    };
    var t978 = function (k466, t238) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t979 = SPOCK.intern("continuations");
     var t980 = function (k467, t239) {
      var r = SPOCK.count(arguments);
      if(r) return r;
      var t981 = function (t468) {
       return t237(k467, t468);
      };
      return ___append(t981, t239, t236);
     };
     return ___put_2dcons_21(k466, t238, t979, t980);
    };
    return ___map(t974, t978, t469);
   };
   return ____25list(t973);
  };
  return ___call_2fcc(t933, t972);
 };
 return ___register_2dcomponent(k355, "change-repository", t932);
};
SPOCK.run(t619);
var t989 = function (k471) {
 var t990 = function (k472, t254) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t255 = t254;
  var t256 = undefined;
  var t991 = function (t500) {
   t256 = t500;	// set! t256
   var t473 = undefined;
   var t992 = function (t475) {
    var t262 = t475;
    var t993 = function (t478) {
     var t994 = function (t481) {
      var t995 = function (t480) {
       var t996 = function (t479) {
        var t997 = function (t476) {
         var t263 = t476;
         var t998 = function (t477) {
          t255 = t477;	// set! t255
          var t474 = undefined;
          return ___yield(k472);
         };
         return ___patch(t998, t255, t263);
        };
        return ___h(t997, t478, false, t479);
       };
       return ___vector(t996, t480);
      };
      return ___h(t995, "div", false, t481);
     };
     var t1004 = function (k482, t264) {
      var r = SPOCK.count(arguments);
      if(r) return r;
      var t267 = t264;
      var t268 = t267;
      var t1005 = t268.car;
      var t265 = t1005;
      var t269 = t264;
      var t270 = t269;
      var t1006 = t270.cdr;
      var t266 = t1006;
      var t1007 = function(k1008, x) { return k1008(x.type); }
      var t1009 = function (t499) {
       var t271 = t499;
       var t272 = "dir";
       var t1010 = SPOCK.equalp(t271, t272);
       var t483 = t1010;
       var t1011;
       if(t483 !== false) {
        var t1012 = function (t486) {
         var t1013 = function (t484) {
          var t1014 = function(k1015, x) { return k1015(x.path); }
          var t1016 = function (t485) {
           return ___h(k482, "div", t484, t485);
          };
          return t1014(t1016, t265);
         };
         return ____25(t1013, "on", t486);
        };
        var t1020 = function (k487, t274) {	// t273
         var r = SPOCK.count(arguments);
         if(r) return r;
         var t1021 = function (k488) {
          var t1022 = function(k1023, x) { return k1023(x.url); }
          var t1024 = function (t494) {
           var t1025 = function (t493) {
            var t275 = t493;
            var t1026 = typeof(t275);
            var t276 = t1026;
            var t277 = "function";
            var t1027 = (t276) === (t277);
            var t489 = t1027;
            var t1028;
            if(t489 !== false) {
             var t1029 = function(k1030, x) { return k1030(x.url); }
             var t1031 = function (t491) {
              var t1032 = function (t490) {
               return t490(k488, t274);
              };
              return ___values(t1032, t491, t262);
             };
             return t1029(t1031, t265);
            }
            else {
             var t1036 = function(k1037, x) { return k1037(x.url); }
             var t1038 = function (t492) {
              return ___values(k488, t492, t262);
             };
             return t1036(t1038, t265);
            }
           };
           return ___values(t1025, t494, t262);
          };
          return t1022(t1024, t265);
         };
         var t1043 = function (k495, t278, t279) {
          var r = SPOCK.count(arguments);
          if(r) return r;
          var t1044 = function (t497) {
           var t280 = t497;
           var t496 = t280;
           return ___send_2dvars(k495, t496);
          };
          var t1046 = SPOCK.intern("newfile");
          var t281 = t1046;
          var t282 = t278;
          var t1047 = new SPOCK.Pair(t281, t282);
          var t1048 = SPOCK.intern("current-files");
          var t283 = t1048;
          var t284 = t279;
          var t1049 = new SPOCK.Pair(t283, t284);
          return ____25list(t1044, t1047, t1049);
         };
         return ___call_2dwith_2dvalues(k487, t1021, t1043);
        };
        var t273 = t1020;
        var t1052 = SPOCK.callback(t273);
        return ____25(t1012, "click", t1052);
       }
       else {
        var t1054 = function(k1055, x) { return k1055(x.path); }
        var t1056 = function (t498) {
         return ___h(k482, "div", false, t498);
        };
        return t1054(t1056, t265);
       }
      };
      return t1007(t1009, t265);
     };
     return ___map(t994, t1004, t262);
    };
    return ___nodename(t993, t254);
   };
   var t1062 = SPOCK.intern("files");
   return ___assoc_2dval(t992, t1062, t256);
  };
  var t1064 = function (k501, t257) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1065 = function (t509) {
    var t260 = t509;
    var t508 = t260;
    var t1066 = function (t502) {
     var t1067 = function (t504) {
      var t1068 = function (t503) {
       var t261 = t503;
       return k501(t261);
      };
      return ____25list(t1068, t504);
     };
     var t1071 = SPOCK.intern("files");
     return ___assoc(t1067, t1071, ____2ainits_2a);
    };
    var t1073 = function (k505, t258) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1074 = SPOCK.intern("continuations");
     var t1075 = function (k506, t259) {
      var r = SPOCK.count(arguments);
      if(r) return r;
      var t1076 = function (t507) {
       return t257(k506, t507);
      };
      return ___append(t1076, t259, t256);
     };
     return ___put_2dcons_21(k505, t258, t1074, t1075);
    };
    return ___map(t1066, t1073, t508);
   };
   var t1081 = SPOCK.intern("files");
   return ____25list(t1065, t1081);
  };
  return ___call_2fcc(t991, t1064);
 };
 return ___register_2dcomponent(k471, "explorer", t990);
};
SPOCK.run(t989);
var t1085 = function (k510) {
 var t1086 = new SPOCK.Pair(new SPOCK.Pair(SPOCK.intern("repository"), "cm-typographic-studio/Cetri"), null);
 ____2ainits_2a = t1086;	// set! *inits*
 var t1087 = function (t513) {
  var t1088 = function (k511, t285) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1089 = t285.getAttribute("spock");
   var t286 = t1089;
   var t1090 = function (t512) {
    return t512(k511, t285);
   };
   return ___get_2dcallback(t1090, t286);
  };
  return ___map(k510, t1088, t513);
 };
 return ___spock_2delements(t1087);
};
SPOCK.run(t1085);
var t1095 = function (k514) {
 var t287 = undefined;
 var t1096 = function (t540) {
  t287 = t540;	// set! t287
  var t515 = undefined;
  var t1097 = function (t517) {
   var t293 = t517;
   var t1098 = function (t516) {	// t518
    return ___yield(k514);
   };
   var t518 = t1098;
   var t1100;
   if(t293 !== false) {
    var t1101 = function (t519) {
     var t294 = t519;
     var t1102 = function (t520) {
      var t1103 = function (k521, t296) {	// t295
       var r = SPOCK.count(arguments);
       if(r) return r;
       var t1104 = function (k522) {
        var t1106 = function (k523, t298) {	// t297
         var r = SPOCK.count(arguments);
         if(r) return r;
         var t1107 = function(k1108, x) { return k1108(x.currentTarget); }
         var t1109 = function (t527) {
          var t1110 = function(k1111, x) { return k1111(x.response); }
          var t1112 = function (t526) {
           var t1113 = function (t524) {
            var t1114 = function(k1115, x) { return k1115(x.currentTarget); }
            var t1116 = function (t525) {
             var t1117 = function(k1118, x) { return k1118(x.response); }
             return t1117(k523, t525);
            };
            return t1114(t1116, t298);
           };
           return ___log(t1113, t526);
          };
          return t1110(t1112, t527);
         };
         return t1107(t1109, t298);
        };
        var t297 = t1106;
        var t1124 = typeof(t297);
        var t299 = t1124;
        var t300 = "function";
        var t1125 = (t299) === (t300);
        var t1105;
        if(t1125 !== false) {
         var t301 = t296;
         var t1126 = function(k1127, x) { return k1127(x.currentTarget); }
         var t1128 = function (t531) {
          var t1129 = function(k1130, x) { return k1130(x.response); }
          var t1131 = function (t530) {
           var t1132 = function (t528) {
            var t1133 = function(k1134, x) { return k1134(x.currentTarget); }
            var t1135 = function (t529) {
             var t1136 = function(k1137, x) { return k1137(x.response); }
             return t1136(k522, t529);
            };
            return t1133(t1135, t301);
           };
           return ___log(t1132, t530);
          };
          return t1129(t1131, t531);
         };
         return t1126(t1128, t301);
        }
        else {
         var t1143 = function (k532, t302) {
          var r = SPOCK.count(arguments);
          if(r) return r;
          var t1144 = function(k1145, x) { return k1145(x.currentTarget); }
          var t1146 = function (t536) {
           var t1147 = function(k1148, x) { return k1148(x.response); }
           var t1149 = function (t535) {
            var t1150 = function (t533) {
             var t1151 = function(k1152, x) { return k1152(x.currentTarget); }
             var t1153 = function (t534) {
              var t1154 = function(k1155, x) { return k1155(x.response); }
              return t1154(k532, t534);
             };
             return t1151(t1153, t302);
            };
            return ___log(t1150, t535);
           };
           return t1147(t1149, t536);
          };
          return t1144(t1146, t302);
         };
         return k522(t1143);
        }
       };
       var t1162 = function (k537, t303) {
        var r = SPOCK.count(arguments);
        if(r) return r;
        var t1163 = function (t539) {
         var t304 = t539;
         var t538 = t304;
         return ___send_2dvars(k537, t538);
        };
        var t1165 = SPOCK.intern("raw-files");
        var t305 = t1165;
        var t306 = t303;
        var t1166 = new SPOCK.Pair(t305, t306);
        return ____25list(t1163, t1166);
       };
       return ___call_2dwith_2dvalues(k521, t1104, t1162);
      };
      var t295 = t1103;
      var t1169 = SPOCK.callback(t295);
      return ___ajax(t518, "GET", t520, t1169);
     };
     return ___jstring(t1102, t294);
    };
    return ___string_2dappend(t1101, "https://api.github.com/repos/", t293, "/contents");
   }
   else {
    return t518(undefined);
   }
  };
  var t1174 = SPOCK.intern("repo");
  return ___assoc_2dval(t1097, t1174, t287);
 };
 var t1176 = function (k541, t288) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1177 = function (t549) {
   var t291 = t549;
   var t548 = t291;
   var t1178 = function (t542) {
    var t1179 = function (t544) {
     var t1180 = function (t543) {
      var t292 = t543;
      return k541(t292);
     };
     return ____25list(t1180, t544);
    };
    var t1183 = SPOCK.intern("repo");
    return ___assoc(t1179, t1183, ____2ainits_2a);
   };
   var t1185 = function (k545, t289) {
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1186 = SPOCK.intern("continuations");
    var t1187 = function (k546, t290) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1188 = function (t547) {
      return t288(k546, t547);
     };
     return ___append(t1188, t290, t287);
    };
    return ___put_2dcons_21(k545, t289, t1186, t1187);
   };
   return ___map(t1178, t1185, t548);
  };
  var t1193 = SPOCK.intern("repo");
  return ____25list(t1177, t1193);
 };
 return ___call_2fcc(t1096, t1176);
};
SPOCK.run(t1095);
var t1196 = function (k550) {
 var t1197 = function (k551, t307) {	// list-files
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1198 = function (k552, t308) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   loop: while(true) {
    var t309 = t308;
    var t1199 = null;
    var t310 = t1199;
    var t1200 = new SPOCK.Pair(t309, t310);
    return k552(t1200);
   }
  };
  return ___map(k551, t1198, t307);
 };
 ___list_2dfiles = t1197;	// set! list-files
 var t311 = undefined;
 var t1203 = function (t561) {
  t311 = t561;	// set! t311
  var t553 = undefined;
  var t1204 = function (t555) {
   var t317 = t555;
   var t1205 = function (t554) {	// t556
    return ___yield(k550);
   };
   var t556 = t1205;
   var t1207;
   if(t317 !== false) {
    var t1208 = function (k557) {
     return ___list_2dfiles(k557, t317);
    };
    var t1210 = function (k558, t318) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1211 = function (t560) {
      var t319 = t560;
      var t559 = t319;
      return ___send_2dvars(k558, t559);
     };
     var t1213 = SPOCK.intern("files");
     var t320 = t1213;
     var t321 = t318;
     var t1214 = new SPOCK.Pair(t320, t321);
     return ____25list(t1211, t1214);
    };
    return ___call_2dwith_2dvalues(t556, t1208, t1210);
   }
   else {
    return t556(undefined);
   }
  };
  var t1218 = SPOCK.intern("raw-files");
  return ___assoc_2dval(t1204, t1218, t311);
 };
 var t1220 = function (k562, t312) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1221 = function (t570) {
   var t315 = t570;
   var t569 = t315;
   var t1222 = function (t563) {
    var t1223 = function (t565) {
     var t1224 = function (t564) {
      var t316 = t564;
      return k562(t316);
     };
     return ____25list(t1224, t565);
    };
    var t1227 = SPOCK.intern("raw-files");
    return ___assoc(t1223, t1227, ____2ainits_2a);
   };
   var t1229 = function (k566, t313) {
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1230 = SPOCK.intern("continuations");
    var t1231 = function (k567, t314) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1232 = function (t568) {
      return t312(k567, t568);
     };
     return ___append(t1232, t314, t311);
    };
    return ___put_2dcons_21(k566, t313, t1230, t1231);
   };
   return ___map(t1222, t1229, t569);
  };
  var t1237 = SPOCK.intern("raw-files");
  return ____25list(t1221, t1237);
 };
 return ___call_2fcc(t1203, t1220);
};
SPOCK.run(t1196);
var t1240 = function (k571) {
 var t1241 = function (k572, t322, t323, t324) {	// insert-files
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   return k572(t322);
  }
 };
 ___insert_2dfiles = t1241;	// set! insert-files
 var t325 = undefined;
 var t1243 = function (t592) {
  t325 = t592;	// set! t325
  var t573 = undefined;
  var t1244 = function (t575) {
   var t331 = t575;
   var t1245 = function (t576) {
    var t332 = t576;
    var t1246 = function (t574) {	// t577
     return ___yield(k571);
    };
    var t577 = t1246;
    var t1248;
    if(t331 !== false) {
     var t1249 = function (t578) {
      var t1250 = function (k579, t334) {	// t333
       var r = SPOCK.count(arguments);
       if(r) return r;
       var t1251 = function (k580) {
        var t1253 = function (k581, t336) {	// t335
         var r = SPOCK.count(arguments);
         if(r) return r;
         var t1254 = function(k1255, x) { return k1255(x.currentTarget); }
         var t1256 = function (t583) {
          var t1257 = function(k1258, x) { return k1258(x.response); }
          var t1259 = function (t582) {
           var t337 = t582;
           return ___insert_2dfiles(k581, t332, t337, t331);
          };
          return t1257(t1259, t583);
         };
         return t1254(t1256, t336);
        };
        var t335 = t1253;
        var t1263 = typeof(t335);
        var t338 = t1263;
        var t339 = "function";
        var t1264 = (t338) === (t339);
        var t1252;
        if(t1264 !== false) {
         var t340 = t334;
         var t1265 = function(k1266, x) { return k1266(x.currentTarget); }
         var t1267 = function (t585) {
          var t1268 = function(k1269, x) { return k1269(x.response); }
          var t1270 = function (t584) {
           var t341 = t584;
           return ___insert_2dfiles(k580, t332, t341, t331);
          };
          return t1268(t1270, t585);
         };
         return t1265(t1267, t340);
        }
        else {
         var t1274 = function (k586, t342) {
          var r = SPOCK.count(arguments);
          if(r) return r;
          var t1275 = function(k1276, x) { return k1276(x.currentTarget); }
          var t1277 = function (t588) {
           var t1278 = function(k1279, x) { return k1279(x.response); }
           var t1280 = function (t587) {
            var t343 = t587;
            return ___insert_2dfiles(k586, t332, t343, t331);
           };
           return t1278(t1280, t588);
          };
          return t1275(t1277, t342);
         };
         return k580(t1274);
        }
       };
       var t1285 = function (k589, t344) {
        var r = SPOCK.count(arguments);
        if(r) return r;
        var t1286 = function (t591) {
         var t345 = t591;
         var t590 = t345;
         return ___send_2dvars(k589, t590);
        };
        var t1288 = SPOCK.intern("bob");
        var t346 = t1288;
        var t347 = t344;
        var t1289 = new SPOCK.Pair(t346, t347);
        return ____25list(t1286, t1289);
       };
       return ___call_2dwith_2dvalues(k579, t1251, t1285);
      };
      var t333 = t1250;
      var t1292 = SPOCK.callback(t333);
      return ___ajax(t577, "GET", t578, t1292);
     };
     return ___jstring(t1249, t331);
    }
    else {
     return t577(undefined);
    }
   };
   var t1296 = SPOCK.intern("current-files");
   return ___assoc_2dval(t1245, t1296, t325);
  };
  var t1298 = SPOCK.intern("newfile");
  return ___assoc_2dval(t1244, t1298, t325);
 };
 var t1300 = function (k593, t326) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1301 = function (t602) {
   var t329 = t602;
   var t601 = t329;
   var t1302 = function (t594) {
    var t1303 = function (t596) {
     var t1304 = function (t597) {
      var t1305 = function (t595) {
       var t330 = t595;
       return k593(t330);
      };
      return ____25list(t1305, t596, t597);
     };
     var t1308 = SPOCK.intern("current-files");
     return ___assoc(t1304, t1308, ____2ainits_2a);
    };
    var t1310 = SPOCK.intern("newfile");
    return ___assoc(t1303, t1310, ____2ainits_2a);
   };
   var t1312 = function (k598, t327) {
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1313 = SPOCK.intern("continuations");
    var t1314 = function (k599, t328) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1315 = function (t600) {
      return t326(k599, t600);
     };
     return ___append(t1315, t328, t325);
    };
    return ___put_2dcons_21(k598, t327, t1313, t1314);
   };
   return ___map(t1302, t1312, t601);
  };
  var t1320 = SPOCK.intern("newfile");
  var t1321 = SPOCK.intern("current-files");
  return ____25list(t1301, t1320, t1321);
 };
 return ___call_2fcc(t1243, t1300);
};
SPOCK.run(t1240);
var t1324 = function (k603) {
 var t348 = undefined;
 var t1325 = function (t608) {
  t348 = t608;	// set! t348
  var t604 = undefined;
  var t1326 = function (t606) {
   var t354 = t606;
   var t1327 = function (t607) {
    var t1328 = function (t605) {
     return ___yield(k603);
    };
    return ___log(t1328, t354);
   };
   return ___print(t1327, "BOB");
  };
  var t1332 = SPOCK.intern("bob");
  return ___assoc_2dval(t1326, t1332, t348);
 };
 var t1334 = function (k609, t349) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1335 = function (t617) {
   var t352 = t617;
   var t616 = t352;
   var t1336 = function (t610) {
    var t1337 = function (t612) {
     var t1338 = function (t611) {
      var t353 = t611;
      return k609(t353);
     };
     return ____25list(t1338, t612);
    };
    var t1341 = SPOCK.intern("bob");
    return ___assoc(t1337, t1341, ____2ainits_2a);
   };
   var t1343 = function (k613, t350) {
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1344 = SPOCK.intern("continuations");
    var t1345 = function (k614, t351) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1346 = function (t615) {
      return t349(k614, t615);
     };
     return ___append(t1346, t351, t348);
    };
    return ___put_2dcons_21(k613, t350, t1344, t1345);
   };
   return ___map(t1336, t1343, t616);
  };
  var t1351 = SPOCK.intern("bob");
  return ____25list(t1335, t1351);
 };
 return ___call_2fcc(t1325, t1334);
};
SPOCK.run(t1324);
var t1354 = function (k618) {
 return ___start(k618);
};
SPOCK.run(t1354);
SPOCK.flush();
/* END OF GENERATED CODE */
