/* CODE GENERATED BY SPOCK 0 */
var t584 = function (k342) {
 var t585 = function (k343, t1, t2) {	// qsa
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t586 = t1.querySelectorAll(t2);
   return k343(t586);
  }
 };
 ___qsa = t585;	// set! qsa
 var t588 = function (k344, t3, t4) {	// qs
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t589 = t3.querySelector(t4);
   return k344(t589);
  }
 };
 ___qs = t588;	// set! qs
 var t591 = function (k345, t5, t6) {	// dqsa
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t592 = document.body.querySelectorAll(t6);
   return k345(t592);
  }
 };
 ___dqsa = t591;	// set! dqsa
 var t594 = function (k346, t7, t8) {	// dqs
  var r = SPOCK.count(arguments);
  if(r) return r;
  return ___qs(k346, document.body, t8);
 };
 ___dqs = t594;	// set! dqs
 var t596 = function (k347, t9) {	// log
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t597 = console.log(t9);
   return k347(t597);
  }
 };
 ___log = t596;	// set! log
 var t599 = function (k348, t10) {	// alert
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t600 = window.alert(t10);
   return k348(t600);
  }
 };
 ___alert = t599;	// set! alert
 var t602 = function (k349, t11) {	// get-id
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t603 = document.getElementById(t11);
   return k349(t603);
  }
 };
 ___get_2did = t602;	// set! get-id
 var t605 = function (k350, t12) {	// remove-node
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t606 = function(k607, x) { return k607(x.parentNode); }
  var t608 = function (t351) {
   var t609 = t351.removeChild(t12);
   return k350(t609);
  };
  return t606(t608, t12);
 };
 ___remove_2dnode = t605;	// set! remove-node
 var t612 = function (k352, t13, t14) {	// insert-node-before
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t613 = function(k614, x) { return k614(x.parentNode); }
  var t615 = function (t353) {
   var t616 = t353.insertBefore(t13, t14);
   return k352(t616);
  };
  return t613(t615, t14);
 };
 ___insert_2dnode_2dbefore = t612;	// set! insert-node-before
 var t619 = function (k354, t15, t16) {	// replace-node
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t620 = function(k621, x) { return k621(x.parentNode); }
  var t622 = function (t355) {
   var t623 = t355.replaceChild(t15, t16);
   return k354(t623);
  };
  return t620(t622, t16);
 };
 ___replace_2dnode = t619;	// set! replace-node
 var t626 = function (k356, t17, t18) {	// node-append-child
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t627 = t17.appendChild(t18);
   return k356(t627);
  }
 };
 ___node_2dappend_2dchild = t626;	// set! node-append-child
 var t629 = function (k357, t19, t20) {	// set-html
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   t19.innerHTML = t20;
   return k357(t20);
  }
 };
 ___set_2dhtml = t629;	// set! set-html
 var t631 = function (k358) {	// spock-elements
  loop: while(true) {
   var t633 = document.body.querySelectorAll("*[spock]");
   var t632 = Array.prototype.slice.call(t633);
   return k358(t632);
  }
 };
 ___spock_2delements = t631;	// set! spock-elements
 var t635 = function (k359, t21, t22, t23) {	// add-event-listener
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t636 = t22.addEventListener(t21, t23);
   return k359(t636);
  }
 };
 ___add_2devent_2dlistener = t635;	// set! add-event-listener
 var t638 = function (k360, t24, t25, t26) {	// set-event
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   t25.event = t26;
   return k360(t25);
  }
 };
 ___set_2devent = t638;	// set! set-event
 var t640 = function (k361, t27, t28) {	// set-click
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   t27.onclick = t28;
   return k361(t27);
  }
 };
 ___set_2dclick = t640;	// set! set-click
 var t642 = function (k362, t29, t30) {	// set-change
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   t29.onchange = t30;
   return k362(t29);
  }
 };
 ___set_2dchange = t642;	// set! set-change
 var t644 = function (k363, t31, t32) {	// set-input
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   t31.oninput = t32;
   return k363(t31);
  }
 };
 ___set_2dinput = t644;	// set! set-input
 var t646 = function (k364, t33, t34) {	// old-set-click
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   t33.onclick = t34;
   return k364(t33);
  }
 };
 ___old_2dset_2dclick = t646;	// set! old-set-click
 var t648 = function (k365, t35) {	// slice
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t649 = Array.prototype.slice.call(t35);
   return k365(t649);
  }
 };
 ___slice = t648;	// set! slice
 var t651 = function (k366, t36) {	// children
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t652 = t36.childNodes;
  return ___slice(k366, t652);
 };
 ___children = t651;	// set! children
 var t654 = function (k367, t37) {	// car-safe
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t38 = t37;
   var t656 = (t38) instanceof SPOCK.Pair ;
   var t655;
   if(t656 !== false) {
    var t39 = t37;
    var t40 = t39;
    var t657 = t40.car;
    t655 = t657;
   }
   else {
    t655 = false;
   }
   return k367(t655);
  }
 };
 ___car_2dsafe = t654;	// set! car-safe
 var t659 = function (k368, t41) {	// cdr-safe
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t42 = t41;
   var t661 = (t42) instanceof SPOCK.Pair ;
   var t660;
   if(t661 !== false) {
    var t43 = t41;
    var t44 = t43;
    var t662 = t44.cdr;
    t660 = t662;
   }
   else {
    t660 = false;
   }
   return k368(t660);
  }
 };
 ___cdr_2dsafe = t659;	// set! cdr-safe
 var t664 = function (k369, t45) {	// empty?
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t47 = t45;
   var t666 = t47 === undefined;
   var t665;
   if(t666 !== false) {
    var t48 = t45;
    var t49 = t48;
    var t668 = null;
    var t50 = t668;
    var t669 = (t49) === (t50);
    var t667;
    if(t669 !== false) {
     var t51 = t45;
     var t670;
     if(t51 !== false) {
      t670 = false;
     }
     else {
      t670 = true;
     }
     t667 = t670;
    }
    else {
     t667 = false;
    }
    t665 = t667;
   }
   else {
    t665 = false;
   }
   var t46 = t665;
   var t671;
   if(t46 !== false) {
    t671 = false;
   }
   else {
    t671 = true;
   }
   return k369(t671);
  }
 };
 ___empty_3f = t664;	// set! empty?
 var t673 = function (k370, t52) {	// nodename
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t674 = t52.nodeName;
   return k370(t674);
  }
 };
 ___nodename = t673;	// set! nodename
 var t676 = function (k371, t53, t54, t55) {	// h
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t677 = function (t372) {	// t373
   var t56 = t372;
   var t678 = snabbdom.h(t53, t54, t56);
   return k371(t678);
  };
  var t373 = t677;
  var t680 = function (t374) {
   var t681;
   if(t374 !== false) {
    return ___list_2d_3evector(t373, t55);
   }
   else {
    var t58 = t55;
    var t684 = (t58) instanceof Array ;
    var t57 = t684;
    var t685;
    if(t57 !== false) {
     t685 = t57;
    }
    else {
     var t59 = t55;
     var t686 = typeof(t59);
     var t61 = t686;
     var t62 = "string";
     var t687 = (t61) === (t62);
     var t60 = t687;
     var t688;
     if(t60 !== false) {
      t688 = t60;
     }
     else {
      var t689 = (t59) instanceof SPOCK.String ;
      t688 = t689;
     }
     t685 = t688;
    }
    var t683;
    if(t685 !== false) {
     t683 = t55;
    }
    else {
     t683 = false;
    }
    return t373(t683);
   }
  };
  return ___list_3f(t680, t55);
 };
 ___h = t676;	// set! h
 var t692 = function (k375, t63, t64) {	// patch
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t693 = patch(t63, t64);
   return k375(t693);
  }
 };
 ___patch = t692;	// set! patch
 var t695 = function (k376, t65) {	// ajax-cb
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t696 = function(k697, x) { return k697(x.responseText); }
  var t698 = function (t377) {
   return ___log(k376, t377);
  };
  return t696(t698, t65);
 };
 ___ajax_2dcb = t695;	// set! ajax-cb
 var t701 = function (k378, t66, t67, t68) {	// ajax
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t702 = new XMLHttpRequest();
   var t69 = t702;
   var t703 = t69.open(t66, t67, true);
   t69.onreadystatechange = t68;
   t69.responseType = "json";
   var t704 = t69.send();
   return k378(t704);
  }
 };
 ___ajax = t701;	// set! ajax
 var t706 = function (k379, t70) {	// get-callback
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t707 = function (t380) {	// t381
   var t71 = t380;
   var t708 = SPOCK.intern("callback");
   return ___get(k379, t71, t708);
  };
  var t381 = t707;
  var t72 = t70;
  var t711 = typeof(t72);
  var t74 = t711;
  var t75 = "string";
  var t712 = (t74) === (t75);
  var t73 = t712;
  var t713;
  if(t73 !== false) {
   t713 = t73;
  }
  else {
   var t714 = (t72) instanceof SPOCK.String ;
   t713 = t714;
  }
  var t710;
  if(t713 !== false) {
   return ___string_2d_3esymbol(t381, t70);
  }
  else {
   return t381(t70);
  }
 };
 ___get_2dcallback = t706;	// set! get-callback
 var t717 = function (k382) {	// waiting
  loop: while(true) {
   return k382(false);
  }
 };
 ___waiting = t717;	// set! waiting
 ___call_2fcc = ___call_2dwith_2dcurrent_2dcontinuation;	// set! call/cc
 var t719 = null;
 ____2aqueue_2a = t719;	// set! *queue*
 var t720 = function (k383, t76) {	// *enqueue*
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t721 = function (t386) {
   var t77 = t386;
   var t385 = t77;
   var t722 = function (t384) {
    ____2aqueue_2a = t384;	// set! *queue*
    return k383(undefined);
   };
   return ___append(t722, ____2aqueue_2a, t385);
  };
  return ____25list(t721, t76);
 };
 ____2aenqueue_2a = t720;	// set! *enqueue*
 var t726 = function (k387) {	// *dequeue*
  loop: while(true) {
   var t79 = ____2aqueue_2a;
   var t80 = t79;
   var t727 = t80.car;
   var t78 = t727;
   var t81 = ____2aqueue_2a;
   var t82 = t81;
   var t728 = t82.cdr;
   ____2aqueue_2a = t728;	// set! *queue*
   return k387(t78);
  }
 };
 ____2adequeue_2a = t726;	// set! *dequeue*
 var t730 = function (k388) {	// yield
  var t83 = ____2aqueue_2a;
  var t84 = t83;
  var t732 = null;
  var t85 = t732;
  var t733 = (t84) === (t85);
  var t731;
  if(t733 !== false) {
   return ___waiting(k388);
  }
  else {
   var t735 = function (t389) {
    var t86 = t389;
    var t736 = function (t390) {
     var t737 = function (t391) {
      return t391(k388);
     };
     return t86(t737);
    };
    return ___print(t736, "YIELDING");
   };
   return ____2adequeue_2a(t735);
  }
 };
 ___yield = t730;	// set! yield
 var t742 = function (k392, t87, t88) {	// assoc-val
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t743 = function (t393) {
   return ___cdr_2dsafe(k392, t393);
  };
  return ___assoc(t743, t87, t88);
 };
 ___assoc_2dval = t742;	// set! assoc-val
 ___merge_2dbindings = ___append;	// set! merge-bindings
 var t746 = function (k394, t89, t90, t91) {	// put-cons!
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t92 = t91;
  var t747 = function (t397) {
   var t94 = t397;
   var t748;
   if(t94 !== false) {
    t748 = t94;
   }
   else {
    var t749 = null;
    t748 = t749;
   }
   var t396 = t748;
   var t93 = t396;
   var t750 = new SPOCK.Pair(t92, t93);
   var t395 = t750;
   return ___put_21(k394, t89, t90, t395);
  };
  return ___get(t747, t89, t90);
 };
 ___put_2dcons_21 = t746;	// set! put-cons!
 var t753 = function (k398, t95, t96) {	// get-binding
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t754 = function (t399) {
   var t97 = t399;
   var t755;
   if(t97 !== false) {
    var t98 = t97;
    var t99 = t98;
    var t756 = t99.cdr;
    t755 = t756;
   }
   else {
    t755 = false;
   }
   return k398(t755);
  };
  return ___assoc(t754, t95, t96);
 };
 ___get_2dbinding = t753;	// set! get-binding
 var t759 = function (k400, t100, t101) {	// send-bindings
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t760 = function (t401) {
   return t401(k400, t101);
  };
  var t762 = SPOCK.intern("continuations");
  return ___get(t760, t100, t762);
 };
 ___send_2dbindings = t759;	// set! send-bindings
 var t764 = function (k402, t102, t103) {	// three-way-split
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t104 = undefined;
  var t765 = function (k403, t105, t106, t107, t108, t109) {	// t104
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t110 = t106;
   var t111 = t110;
   var t767 = null;
   var t112 = t767;
   var t768 = (t111) === (t112);
   var t766;
   if(t768 !== false) {
    var t769 = function (t405) {
     var t770 = function (t404) {
      var t113 = t404;
      return k403(t113);
     };
     return ____25list(t770, t405, t108, t109);
    };
    return ___append(t769, t105, t107);
   }
   else {
    var t115 = t106;
    var t116 = t115;
    var t774 = t116.car;
    var t114 = t774;
    var t117 = undefined;
    var t775 = function (k406, t118, t119) {	// t117
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t120 = t118;
     var t121 = t120;
     var t777 = null;
     var t122 = t777;
     var t778 = (t121) === (t122);
     var t776;
     if(t778 !== false) {
      var t123 = t106;
      var t124 = t123;
      var t779 = t124.cdr;
      var t125 = t114;
      var t126 = t109;
      var t780 = new SPOCK.Pair(t125, t126);
      return t104(k406, t119, t779, t107, t108, t780);
     }
     else {
      var t128 = t118;
      var t129 = t128;
      var t782 = t129.car;
      var t127 = t782;
      var t130 = t114;
      var t131 = t127;
      var t784 = SPOCK.equalp(t130, t131);
      var t783;
      if(t784 !== false) {
       var t785 = function (t407) {
        var t134 = t106;
        var t135 = t134;
        var t786 = t135.cdr;
        var t136 = t114;
        var t137 = t108;
        var t787 = new SPOCK.Pair(t136, t137);
        return t104(k406, t407, t786, t107, t787, t109);
       };
       var t132 = t118;
       var t133 = t132;
       var t789 = t133.cdr;
       return ___append(t785, t119, t789);
      }
      else {
       var t138 = t118;
       var t139 = t138;
       var t791 = t139.cdr;
       var t140 = t127;
       var t141 = t119;
       var t792 = new SPOCK.Pair(t140, t141);
       return t117(k406, t791, t792);
      }
      t776 = t783;
     }
    };
    t117 = t775;	// set! t117
    var t794 = null;
    return t117(k403, t105, t794);
   }
  };
  t104 = t765;	// set! t104
  var t796 = null;
  var t797 = null;
  var t798 = null;
  return t104(k402, t102, t103, t796, t797, t798);
 };
 ___three_2dway_2dsplit = t764;	// set! three-way-split
 var t800 = function (k408, t142, t143) {	// merge-alist-sets
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t145 = t143;
  var t146 = t145;
  var t801 = t146.car;
  var t144 = t801;
  var t147 = undefined;
  var t802 = function (k409, t148, t149, t150) {	// t147
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t152 = t149;
   var t153 = t152;
   var t804 = null;
   var t154 = t804;
   var t805 = (t153) === (t154);
   var t151 = t805;
   var t806;
   if(t151 !== false) {
    t806 = t151;
   }
   else {
    var t155 = t148;
    var t156 = t155;
    var t807 = null;
    var t157 = t807;
    var t808 = (t156) === (t157);
    t806 = t808;
   }
   var t803;
   if(t806 !== false) {
    var t809 = function (t412) {
     var t162 = t412;
     var t411 = t162;
     var t160 = t411;
     var t161 = t149;
     var t810 = new SPOCK.Pair(t160, t161);
     var t410 = t810;
     var t158 = t410;
     var t159 = t150;
     var t811 = new SPOCK.Pair(t158, t159);
     return k409(t811);
    };
    return ____25list(t809, t144);
   }
   else {
    var t164 = t148;
    var t166 = t164;
    var t167 = t166;
    var t814 = t167.car;
    var t165 = t814;
    var t168 = t165;
    var t815 = t168.car;
    var t163 = t815;
    var t170 = t148;
    var t172 = t170;
    var t173 = t172;
    var t816 = t173.car;
    var t171 = t816;
    var t174 = t171;
    var t817 = t174.cdr;
    var t169 = t817;
    var t818 = function (t413) {
     var t175 = t413;
     var t177 = t175;
     var t178 = t177;
     var t819 = t178.car;
     var t176 = t819;
     var t180 = t175;
     var t182 = t180;
     var t183 = t182;
     var t820 = t183.cdr;
     var t181 = t820;
     var t184 = t181;
     var t821 = t184.car;
     var t179 = t821;
     var t822 = function (t414) {
      var t185 = t414;
      var t823 = function (t417) {
       var t188 = t417;
       var t416 = t188;
       var t824 = function (t415) {
        var t186 = t148;
        var t187 = t186;
        var t825 = t187.cdr;
        return t147(k409, t825, t185, t415);
       };
       return ___append(t824, t416, t150);
      };
      var t189 = t163;
      var t190 = t176;
      var t828 = new SPOCK.Pair(t189, t190);
      var t193 = t144;
      var t194 = t163;
      var t829 = new SPOCK.Pair(t193, t194);
      var t191 = t829;
      var t192 = t179;
      var t830 = new SPOCK.Pair(t191, t192);
      return ____25list(t823, t828, t830);
     };
     return ___caddr(t822, t175);
    };
    return ___three_2dway_2dsplit(t818, t169, t149);
   }
  };
  t147 = t802;	// set! t147
  var t195 = t143;
  var t196 = t195;
  var t834 = t196.cdr;
  var t835 = null;
  return t147(k408, t142, t834, t835);
 };
 ___merge_2dalist_2dsets = t800;	// set! merge-alist-sets
 var t837 = function (k418, t197) {	// merge-continuation-lists
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t198 = undefined;
  var t838 = function (k419, t199, t200) {	// t198
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t201 = t200;
   var t202 = t201;
   var t840 = null;
   var t203 = t840;
   var t841 = (t202) === (t203);
   var t839;
   if(t841 !== false) {
    return k419(t199);
   }
   else {
    var t843 = function (t420) {
     var t206 = t200;
     var t207 = t206;
     var t844 = t207.cdr;
     return t198(k419, t420, t844);
    };
    var t204 = t200;
    var t205 = t204;
    var t846 = t205.car;
    return ___merge_2dalist_2dsets(t843, t199, t846);
   }
  };
  t198 = t838;	// set! t198
  var t848 = null;
  return t198(k418, t848, t197);
 };
 ___merge_2dcontinuation_2dlists = t837;	// set! merge-continuation-lists
 var t850 = function (k421, t208) {	// send-vars
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t851 = function (t428) {
   var t852 = function (t427) {
    var t853 = function (t422) {
     return ___yield(k421);
    };
    var t855 = function (k423, t209) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t856 = function (t424) {
      var t212 = t209;
      var t213 = t212;
      var t857 = t213.car;
      var t210 = t857;
      var t214 = t209;
      var t215 = t214;
      var t858 = t215.cdr;
      var t211 = t858;
      var t217 = t211;
      var t218 = t217;
      var t860 = null;
      var t219 = t860;
      var t861 = (t218) === (t219);
      var t216 = t861;
      var t862;
      if(t216 !== false) {
       t862 = false;
      }
      else {
       t862 = true;
      }
      var t859;
      if(t862 !== false) {
       var t863 = function (k425, t220) {
        var r = SPOCK.count(arguments);
        if(r) return r;
        var t864 = function (k426) {
         return t220(k426, t208);
        };
        return ____2aenqueue_2a(k425, t864);
       };
       return ___map(k423, t863, t211);
      }
      else {
       return k423(undefined);
      }
     };
     return ___print(t856, "CONTINUATIONS: ", t209);
    };
    return ___map(t853, t855, t427);
   };
   return ___merge_2dcontinuation_2dlists(t852, t428);
  };
  var t872 = function (k429, t221) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t223 = t221;
   var t224 = t223;
   var t873 = t224.car;
   var t222 = t873;
   var t225 = t222;
   var t874 = function (t430) {
    var t226 = t430;
    var t875 = new SPOCK.Pair(t225, t226);
    return k429(t875);
   };
   var t877 = SPOCK.intern("continuations");
   return ___get(t874, t222, t877);
  };
  return ___map(t851, t872, t208);
 };
 ___send_2dvars = t850;	// set! send-vars
 var t880 = function (k431, t227, t228) {	// register-component
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t881 = function (t432) {	// t433
   var t229 = t432;
   var t882 = SPOCK.intern("callback");
   return ___put_21(k431, t229, t882, t228);
  };
  var t433 = t881;
  var t230 = t227;
  var t885 = typeof(t230);
  var t232 = t885;
  var t233 = "string";
  var t886 = (t232) === (t233);
  var t231 = t886;
  var t887;
  if(t231 !== false) {
   t887 = t231;
  }
  else {
   var t888 = (t230) instanceof SPOCK.String ;
   t887 = t888;
  }
  var t884;
  if(t887 !== false) {
   return ___string_2d_3esymbol(t433, t227);
  }
  else {
   return t433(t227);
  }
 };
 ___register_2dcomponent = t880;	// set! register-component
 var t891 = function (k434) {	// start
  var t892 = function (t435) {
   return ___print(k434, "waiting...");
  };
  var t894 = function (k436, t234) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   loop: while(true) {
    ___waiting = t234;	// set! waiting
    return k436(undefined);
   }
  };
  return ___call_2fcc(t892, t894);
 };
 ___start = t891;	// set! start
 var t897 = function (k437, t235) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t236 = undefined;
  var t898 = function (t445) {
   t236 = t445;	// set! t236
   var t438 = undefined;
   var t899 = function (k439, t244) {	// t243
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t900 = function (k440) {
     var t245 = t244;
     var t901 = function(k902, x) { return k902(x.target); }
     var t903 = function (t441) {
      var t904 = function(k905, x) { return k905(x.value); }
      return t904(k440, t441);
     };
     return t901(t903, t245);
    };
    var t908 = function (k442, t246) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t909 = function (t444) {
      var t247 = t444;
      var t443 = t247;
      return ___send_2dvars(k442, t443);
     };
     var t911 = SPOCK.intern("repo");
     var t248 = t911;
     var t249 = t246;
     var t912 = new SPOCK.Pair(t248, t249);
     return ____25list(t909, t912);
    };
    return ___call_2dwith_2dvalues(k439, t900, t908);
   };
   var t243 = t899;
   var t915 = SPOCK.callback(t243);
   t235.onchange = t915;
   return ___yield(k437);
  };
  var t917 = function (k446, t237) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t918 = function (k449, t239) {	// t238
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t919 = function (t450) {
     return t237(k449, t450);
    };
    return ___append(t919, t239, t236);
   };
   var t238 = t918;
   var t922 = function (t453) {
    var t241 = t453;
    var t452 = t241;
    var t923 = function (t447) {
     var t924 = function (t448) {
      var t242 = t448;
      return k446(t242);
     };
     return ____25list(t924);
    };
    var t927 = function (k451, t240) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t928 = SPOCK.intern("continuations");
     return ___put_2dcons_21(k451, t240, t928, t238);
    };
    return ___map(t923, t927, t452);
   };
   return ____25list(t922);
  };
  return ___call_2fcc(t898, t917);
 };
 return ___register_2dcomponent(k342, "change-repository", t897);
};
SPOCK.run(t584);
var t934 = function (k454) {
 var t935 = function (k455, t250) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t251 = t250;
  var t252 = undefined;
  var t936 = function (t478) {
   t252 = t478;	// set! t252
   var t456 = undefined;
   var t937 = function (t458) {
    var t259 = t458;
    var t938 = function (t461) {
     var t939 = function (t464) {
      var t940 = function (t463) {
       var t941 = function (t462) {
        var t942 = function (t459) {
         var t260 = t459;
         var t943 = function (t460) {
          t251 = t460;	// set! t251
          var t457 = undefined;
          return ___yield(k455);
         };
         return ___patch(t943, t251, t260);
        };
        return ___h(t942, t461, false, t462);
       };
       return ___vector(t941, t463);
      };
      return ___h(t940, "div", false, t464);
     };
     var t949 = function (k465, t261) {
      var r = SPOCK.count(arguments);
      if(r) return r;
      var t264 = t261;
      var t265 = t264;
      var t950 = t265.car;
      var t262 = t950;
      var t266 = t261;
      var t267 = t266;
      var t951 = t267.cdr;
      var t263 = t951;
      var t952 = function(k953, x) { return k953(x.type); }
      var t954 = function (t477) {
       var t268 = t477;
       var t269 = "dir";
       var t955 = SPOCK.equalp(t268, t269);
       var t466 = t955;
       var t956;
       if(t466 !== false) {
        var t957 = function (t469) {
         var t958 = function (t467) {
          var t959 = function(k960, x) { return k960(x.path); }
          var t961 = function (t468) {
           return ___h(k465, "div", t467, t468);
          };
          return t959(t961, t262);
         };
         return ____25(t958, "on", t469);
        };
        var t965 = function (k470, t271) {	// t270
         var r = SPOCK.count(arguments);
         if(r) return r;
         var t966 = function (k471) {
          var t272 = t271;
          var t967 = function(k968, x) { return k968(x.url); }
          var t969 = function (t472) {
           return ___values(k471, t472, t259);
          };
          return t967(t969, t262);
         };
         var t972 = function (k473, t273, t274) {
          var r = SPOCK.count(arguments);
          if(r) return r;
          var t973 = function (t475) {
           var t275 = t475;
           var t474 = t275;
           return ___send_2dvars(k473, t474);
          };
          var t975 = SPOCK.intern("newfile");
          var t276 = t975;
          var t277 = t273;
          var t976 = new SPOCK.Pair(t276, t277);
          var t977 = SPOCK.intern("current-files");
          var t278 = t977;
          var t279 = t274;
          var t978 = new SPOCK.Pair(t278, t279);
          return ____25list(t973, t976, t978);
         };
         return ___call_2dwith_2dvalues(k470, t966, t972);
        };
        var t270 = t965;
        var t981 = SPOCK.callback(t270);
        return ____25(t957, "click", t981);
       }
       else {
        var t983 = function(k984, x) { return k984(x.path); }
        var t985 = function (t476) {
         return ___h(k465, "div", false, t476);
        };
        return t983(t985, t262);
       }
      };
      return t952(t954, t262);
     };
     return ___map(t939, t949, t259);
    };
    return ___nodename(t938, t250);
   };
   var t991 = SPOCK.intern("files");
   return ___assoc_2dval(t937, t991, t252);
  };
  var t993 = function (k479, t253) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t994 = function (k483, t255) {	// t254
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t995 = function (t484) {
     return t253(k483, t484);
    };
    return ___append(t995, t255, t252);
   };
   var t254 = t994;
   var t998 = function (t487) {
    var t257 = t487;
    var t486 = t257;
    var t999 = function (t480) {
     var t1000 = function (t482) {
      var t1001 = function (t481) {
       var t258 = t481;
       return k479(t258);
      };
      return ____25list(t1001, t482);
     };
     var t1004 = SPOCK.intern("files");
     return ___assoc(t1000, t1004, ____2ainits_2a);
    };
    var t1006 = function (k485, t256) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1007 = SPOCK.intern("continuations");
     return ___put_2dcons_21(k485, t256, t1007, t254);
    };
    return ___map(t999, t1006, t486);
   };
   var t1010 = SPOCK.intern("files");
   return ____25list(t998, t1010);
  };
  return ___call_2fcc(t936, t993);
 };
 return ___register_2dcomponent(k454, "explorer", t935);
};
SPOCK.run(t934);
var t1014 = function (k488) {
 var t1015 = new SPOCK.Pair(new SPOCK.Pair(SPOCK.intern("repository"), "cm-typographic-studio/Cetri"), null);
 ____2ainits_2a = t1015;	// set! *inits*
 var t1016 = function (t491) {
  var t1017 = function (k489, t280) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1018 = t280.getAttribute("spock");
   var t281 = t1018;
   var t1019 = function (t490) {
    return t490(k489, t280);
   };
   return ___get_2dcallback(t1019, t281);
  };
  return ___map(k488, t1017, t491);
 };
 return ___spock_2delements(t1016);
};
SPOCK.run(t1014);
var t1024 = function (k492) {
 var t282 = undefined;
 var t1025 = function (t509) {
  t282 = t509;	// set! t282
  var t493 = undefined;
  var t1026 = function (t495) {
   var t289 = t495;
   var t1027 = function (t494) {	// t496
    return ___yield(k492);
   };
   var t496 = t1027;
   var t1029;
   if(t289 !== false) {
    var t1030 = function (t497) {
     var t290 = t497;
     var t1031 = function (t498) {
      var t1032 = function (t499) {
       var t1033 = function (k500, t292) {	// t291
        var r = SPOCK.count(arguments);
        if(r) return r;
        var t1034 = function (k501) {
         var t293 = t292;
         var t1035 = function(k1036, x) { return k1036(x.currentTarget); }
         var t1037 = function (t505) {
          var t1038 = function(k1039, x) { return k1039(x.response); }
          var t1040 = function (t504) {
           var t1041 = function (t502) {
            var t1042 = function(k1043, x) { return k1043(x.currentTarget); }
            var t1044 = function (t503) {
             var t1045 = function(k1046, x) { return k1046(x.response); }
             return t1045(k501, t503);
            };
            return t1042(t1044, t293);
           };
           return ___log(t1041, t504);
          };
          return t1038(t1040, t505);
         };
         return t1035(t1037, t293);
        };
        var t1052 = function (k506, t294) {
         var r = SPOCK.count(arguments);
         if(r) return r;
         var t1053 = function (t508) {
          var t295 = t508;
          var t507 = t295;
          return ___send_2dvars(k506, t507);
         };
         var t1055 = SPOCK.intern("raw-files");
         var t296 = t1055;
         var t297 = t294;
         var t1056 = new SPOCK.Pair(t296, t297);
         return ____25list(t1053, t1056);
        };
        return ___call_2dwith_2dvalues(k500, t1034, t1052);
       };
       var t291 = t1033;
       var t1059 = SPOCK.callback(t291);
       return ___ajax(t496, "GET", t499, t1059);
      };
      return ___jstring(t1032, t290);
     };
     return ___print(t1031, "AJAX");
    };
    return ___string_2dappend(t1030, "https://api.github.com/repos/", t289, "/contents");
   }
   else {
    return t496(undefined);
   }
  };
  var t1065 = SPOCK.intern("repo");
  return ___assoc_2dval(t1026, t1065, t282);
 };
 var t1067 = function (k510, t283) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1068 = function (k514, t285) {	// t284
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1069 = function (t515) {
    return t283(k514, t515);
   };
   return ___append(t1069, t285, t282);
  };
  var t284 = t1068;
  var t1072 = function (t518) {
   var t287 = t518;
   var t517 = t287;
   var t1073 = function (t511) {
    var t1074 = function (t513) {
     var t1075 = function (t512) {
      var t288 = t512;
      return k510(t288);
     };
     return ____25list(t1075, t513);
    };
    var t1078 = SPOCK.intern("repo");
    return ___assoc(t1074, t1078, ____2ainits_2a);
   };
   var t1080 = function (k516, t286) {
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1081 = SPOCK.intern("continuations");
    return ___put_2dcons_21(k516, t286, t1081, t284);
   };
   return ___map(t1073, t1080, t517);
  };
  var t1084 = SPOCK.intern("repo");
  return ____25list(t1072, t1084);
 };
 return ___call_2fcc(t1025, t1067);
};
SPOCK.run(t1024);
var t1087 = function (k519) {
 var t1088 = function (k520, t298) {	// list-files
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1089 = function (k521, t299) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   loop: while(true) {
    var t300 = t299;
    var t1090 = null;
    var t301 = t1090;
    var t1091 = new SPOCK.Pair(t300, t301);
    return k521(t1091);
   }
  };
  return ___map(k520, t1089, t298);
 };
 ___list_2dfiles = t1088;	// set! list-files
 var t302 = undefined;
 var t1094 = function (t530) {
  t302 = t530;	// set! t302
  var t522 = undefined;
  var t1095 = function (t524) {
   var t309 = t524;
   var t1096 = function (t523) {	// t525
    return ___yield(k519);
   };
   var t525 = t1096;
   var t1098;
   if(t309 !== false) {
    var t1099 = function (k526) {
     return ___list_2dfiles(k526, t309);
    };
    var t1101 = function (k527, t310) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1102 = function (t529) {
      var t311 = t529;
      var t528 = t311;
      return ___send_2dvars(k527, t528);
     };
     var t1104 = SPOCK.intern("files");
     var t312 = t1104;
     var t313 = t310;
     var t1105 = new SPOCK.Pair(t312, t313);
     return ____25list(t1102, t1105);
    };
    return ___call_2dwith_2dvalues(t525, t1099, t1101);
   }
   else {
    return t525(undefined);
   }
  };
  var t1109 = SPOCK.intern("raw-files");
  return ___assoc_2dval(t1095, t1109, t302);
 };
 var t1111 = function (k531, t303) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1112 = function (k535, t305) {	// t304
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1113 = function (t536) {
    return t303(k535, t536);
   };
   return ___append(t1113, t305, t302);
  };
  var t304 = t1112;
  var t1116 = function (t539) {
   var t307 = t539;
   var t538 = t307;
   var t1117 = function (t532) {
    var t1118 = function (t534) {
     var t1119 = function (t533) {
      var t308 = t533;
      return k531(t308);
     };
     return ____25list(t1119, t534);
    };
    var t1122 = SPOCK.intern("raw-files");
    return ___assoc(t1118, t1122, ____2ainits_2a);
   };
   var t1124 = function (k537, t306) {
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1125 = SPOCK.intern("continuations");
    return ___put_2dcons_21(k537, t306, t1125, t304);
   };
   return ___map(t1117, t1124, t538);
  };
  var t1128 = SPOCK.intern("raw-files");
  return ____25list(t1116, t1128);
 };
 return ___call_2fcc(t1094, t1111);
};
SPOCK.run(t1087);
var t1131 = function (k540) {
 var t1132 = function (k541, t314, t315, t316) {	// insert-files
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   return k541(t314);
  }
 };
 ___insert_2dfiles = t1132;	// set! insert-files
 var t317 = undefined;
 var t1134 = function (t557) {
  t317 = t557;	// set! t317
  var t542 = undefined;
  var t1135 = function (t544) {
   var t324 = t544;
   var t1136 = function (t545) {
    var t325 = t545;
    var t1137 = function (t543) {	// t546
     return ___yield(k540);
    };
    var t546 = t1137;
    var t1139;
    if(t325 !== false) {
     var t1140 = function (t547) {
      var t1141 = function (t548) {
       var t1142 = function (k549, t327) {	// t326
        var r = SPOCK.count(arguments);
        if(r) return r;
        var t1143 = function (k550) {
         var t328 = t327;
         var t1144 = function (t551) {
          var t1145 = function(k1146, x) { return k1146(x.currentTarget); }
          var t1147 = function (t553) {
           var t1148 = function(k1149, x) { return k1149(x.response); }
           var t1150 = function (t552) {
            var t329 = t552;
            return ___insert_2dfiles(k550, t324, t329, t325);
           };
           return t1148(t1150, t553);
          };
          return t1145(t1147, t328);
         };
         return ___log(t1144, t328);
        };
        var t1155 = function (k554, t330) {
         var r = SPOCK.count(arguments);
         if(r) return r;
         var t1156 = function (t556) {
          var t331 = t556;
          var t555 = t331;
          return ___send_2dvars(k554, t555);
         };
         var t1158 = SPOCK.intern("bobby");
         var t332 = t1158;
         var t333 = t330;
         var t1159 = new SPOCK.Pair(t332, t333);
         return ____25list(t1156, t1159);
        };
        return ___call_2dwith_2dvalues(k549, t1143, t1155);
       };
       var t326 = t1142;
       var t1162 = SPOCK.callback(t326);
       return ___ajax(t546, "GET", t548, t1162);
      };
      return ___jstring(t1141, t325);
     };
     return ___print(t1140, "AJAX2");
    }
    else {
     return t546(undefined);
    }
   };
   var t1167 = SPOCK.intern("newfile");
   return ___assoc_2dval(t1136, t1167, t317);
  };
  var t1169 = SPOCK.intern("current-files");
  return ___assoc_2dval(t1135, t1169, t317);
 };
 var t1171 = function (k558, t318) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1172 = function (k563, t320) {	// t319
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1173 = function (t564) {
    return t318(k563, t564);
   };
   return ___append(t1173, t320, t317);
  };
  var t319 = t1172;
  var t1176 = function (t567) {
   var t322 = t567;
   var t566 = t322;
   var t1177 = function (t559) {
    var t1178 = function (t561) {
     var t1179 = function (t562) {
      var t1180 = function (t560) {
       var t323 = t560;
       return k558(t323);
      };
      return ____25list(t1180, t561, t562);
     };
     var t1183 = SPOCK.intern("newfile");
     return ___assoc(t1179, t1183, ____2ainits_2a);
    };
    var t1185 = SPOCK.intern("current-files");
    return ___assoc(t1178, t1185, ____2ainits_2a);
   };
   var t1187 = function (k565, t321) {
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1188 = SPOCK.intern("continuations");
    return ___put_2dcons_21(k565, t321, t1188, t319);
   };
   return ___map(t1177, t1187, t566);
  };
  var t1191 = SPOCK.intern("current-files");
  var t1192 = SPOCK.intern("newfile");
  return ____25list(t1176, t1191, t1192);
 };
 return ___call_2fcc(t1134, t1171);
};
SPOCK.run(t1131);
var t1195 = function (k568) {
 var t334 = undefined;
 var t1196 = function (t573) {
  t334 = t573;	// set! t334
  var t569 = undefined;
  var t1197 = function (t571) {
   var t341 = t571;
   var t1198 = function (t572) {
    var t1199 = function (t570) {
     return ___yield(k568);
    };
    return ___log(t1199, t341);
   };
   return ___print(t1198, "BOB");
  };
  var t1203 = SPOCK.intern("bob");
  return ___assoc_2dval(t1197, t1203, t334);
 };
 var t1205 = function (k574, t335) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1206 = function (k578, t337) {	// t336
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1207 = function (t579) {
    return t335(k578, t579);
   };
   return ___append(t1207, t337, t334);
  };
  var t336 = t1206;
  var t1210 = function (t582) {
   var t339 = t582;
   var t581 = t339;
   var t1211 = function (t575) {
    var t1212 = function (t577) {
     var t1213 = function (t576) {
      var t340 = t576;
      return k574(t340);
     };
     return ____25list(t1213, t577);
    };
    var t1216 = SPOCK.intern("bob");
    return ___assoc(t1212, t1216, ____2ainits_2a);
   };
   var t1218 = function (k580, t338) {
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1219 = SPOCK.intern("continuations");
    return ___put_2dcons_21(k580, t338, t1219, t336);
   };
   return ___map(t1211, t1218, t581);
  };
  var t1222 = SPOCK.intern("bob");
  return ____25list(t1210, t1222);
 };
 return ___call_2fcc(t1196, t1205);
};
SPOCK.run(t1195);
var t1225 = function (k583) {
 return ___start(k583);
};
SPOCK.run(t1225);
SPOCK.flush();
/* END OF GENERATED CODE */
